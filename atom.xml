<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WHC 的个人博客</title>
  
  <subtitle>WHC blog</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-25T06:38:23.200Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>whc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>若依-登录的实现</title>
    <link href="http://example.com/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-03-14T06:32:53.000Z</published>
    <updated>2022-04-25T06:38:23.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508685180352.png" alt="Image"></p><hr><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508685328663.png" alt="Image"></p><hr><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508685449154.png" alt="Image"></p><hr><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508685610925.png" alt="Image"></p><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508685801136.png" alt="img"></p><hr><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508686676017.png" alt="Image"></p><hr><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Image-16508686909298.png" alt="Image"></p><p><img src="/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%9E%E7%8E%B0/Users/Whc/AppData/Local/Temp/chrome_drag11844_18932/Image.png" alt="Image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2022/03/14/%E8%8B%A5%E4%BE%9D-%E7%99%BB%E5%BD%95%E7%9A%84%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>若依-生成验证码</title>
    <link href="http://example.com/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>http://example.com/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</id>
    <published>2022-03-11T06:24:48.000Z</published>
    <updated>2022-04-25T07:31:22.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142757463.png" alt="image-20220425142757463"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">created() &#123;</span><br><span class="line"><span class="built_in">this</span>.getCode();</span><br><span class="line"><span class="built_in">this</span>.getCookie();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142818899.png" alt="image-20220425142818899"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142825967.png" alt="image-20220425142825967"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142835417.png" alt="image-20220425142835417"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142851306.png" alt="image-20220425142851306"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142859562.png" alt="image-20220425142859562"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142907284.png" alt="image-20220425142907284"></p><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/image-20220425142913987.png" alt="image-20220425142913987"></p><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><p><img src="/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/b05ca546242fe22d5e50e5a3f213e8c3.png" alt="image-20220425143009050"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2022/03/11/%E8%8B%A5%E4%BE%9D-%E7%94%9F%E6%88%90%E9%AA%8C%E</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swagger的使用</title>
    <link href="http://example.com/2022/03/02/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/03/02/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2022-03-02T06:19:38.000Z</published>
    <updated>2022-04-25T07:10:08.639Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/03/02/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/image-20220425142100168.png" alt="image-20220425142100168"></p><h1 id="Swagger2-Springfox-简介"><a href="#Swagger2-Springfox-简介" class="headerlink" title="Swagger2(Springfox)简介"></a>Swagger2(Springfox)简介</h1><p>使用Swagger时如果碰见版本更新或迭代时，只需要更改Swagger的描述文件即可。<br>但是在频繁的更新项目版本时很多开发人员认为即使修改描述文件（(yml或json)也是一<br>定的工作负担，久而久之就直接修改代码，而不去修改描述文件了，这样基于描述文件生成<br>接口文档也失去了意义。<br>Marty Pitt编写了一个基于Spring 的组件swagger-springmvc。Spring-fox就是根<br>据这个组件发展而来的全新项目。<br>Spring-fox是根据代码生成接口文档，所以正常的进行更新项目版本，修改代码即可，<br>而不需要跟随修改描述文件。<br>Spring-fox利用自身AOP特性，把Swagger集成进来，底层还是Swagger。但是使<br>用起来确方便很多。<br>所以在实际开发中，都是直接使用spring-fox。</p><p>1.导入依赖<br><dependency><br><groupId>io.springfox</groupId><br><artifactId>springfox-swagger-ui</artifactId><br><version>2.9.2</version><br></dependency><br><dependency><br><groupId>io.springfox</groupId><br><artifactId>springfox-swagger2</artifactId><br><version>2.9.2</version><br></dependency></p><p>2.编写项目用于测试<br>@RestController<br>public class  MyController {<br>&#x2F;&#x2F;  登录操作<br>@PostMapping(“&#x2F;login”)<br>public boolean  login(String uname,String pwd){<br>return true;<br>}<br>}</p><p>3添加注解<br>在SpringBoot的启动类中添加@EnableSwagger2注解。<br>添加此注解后表示对当前项目中全部控制器进行扫描。应用Swagger2<br><img src="/2022/03/02/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/image-20220425142153283.png" alt="image-20220425142153283"><br>4.swagger后台访问连接<br><a href="http://127.0.0.1:8080/swagger-ui.html">http://127.0.0.1:8080/swagger-ui.html</a></p><p>swagger相关博客</p><p><a href="https://blog.csdn.net/ThinkWon/article/details/107477801">https://blog.csdn.net/ThinkWon/article/details/107477801</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2022/03/02/swagger%E7%9A%84%E4%BD%BF%E7%94%A8/image-20220425142100168.png&quot; alt=&quot;image-20220425142100168&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Swagger2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java面向对象</title>
    <link href="http://example.com/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-11-20T05:26:57.000Z</published>
    <updated>2022-04-25T06:07:42.907Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135432595.png" alt="image-20220425135432595"></p><h1 id="面向对象简介"><a href="#面向对象简介" class="headerlink" title="面向对象简介"></a>面向对象简介</h1><h2 id="面向过程和面向对象"><a href="#面向过程和面向对象" class="headerlink" title="面向过程和面向对象"></a>面向过程和面向对象</h2><ol><li>面向过程思想</li><li>步骤清晰简单，第一步做什么，第二部做什么…</li><li>面向过程适合处理一些较为简单的问题</li><li>面向对象思想</li><li>物以类聚，分类的思维模式，思考问题首先会解决问题需要哪些分类，然后对这些分类进行单独思考。最后，才对某个分类下的细节进行面向过程的思索。</li><li>面向对象适合处理复杂的问题，适合处理需要多人协作的问题！</li><li><strong>对于描述复杂的事物，为了从宏观上把握、从整体上合理分析，我们需要使用面向对象来分析整个系统。但是，具体到微观操作，仍然需要面向过程的思路去处理。</strong></li></ol><h2 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h2><p>面向对象编程（Object-Oriented Programming, OOP）<br>本质：<strong>以类的方式组织代码，以对象的组织(封装)数据。</strong><br>抽象<br>三大特性：<br>        **封装<br>        继承<br>        多态<br>从认识论的角度考虑是先有对象后有类。对象是具体的事物，类是对象的抽象。<br>从代码运行角度考虑是先有类后有对象。类是对象的模板。</p><h2 id="类与对象的关系"><a href="#类与对象的关系" class="headerlink" title="类与对象的关系"></a>类与对象的关系</h2><ul><li><strong>类是一种抽象的数据类型</strong>，它是对某一类事物整体描述&#x2F;定义，但并不能代表某一个具体的事物。<br>动物、植物、手机、电脑…Person类、Pet类、Cat类等，都是用来描述&#x2F;定义某一具体的事物应该具备的特点和行为。</li><li><strong>对象是抽象概念的具体实例</strong>，如张三是人的一个具体实例、张三家里的狗旺财就是狗的一个具体实例。</li></ul><h1 id="构造器与内存分析"><a href="#构造器与内存分析" class="headerlink" title="构造器与内存分析"></a>构造器与内存分析</h1><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><p><strong>一个类即使什么都不写，也会存在一个默认的无参构造方法（没有返回类型）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//显示地定义构造器</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//作用：1. 使用new关键字，本质是在调用构造器</span></span><br><span class="line">    <span class="comment">//2. 用来初始化对象的值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;&#125; <span class="comment">//无参构造</span></span><br><span class="line">    <span class="comment">//有参构造 3.一旦定义了有参构造，无参就必须显示定义（存在）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//Alt+insert 快捷键插入构造方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个宠物类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name; <span class="comment">//默认 null</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> age; <span class="comment">//默认 0</span></span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;叫了一声&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//应用类，创建调用对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Pet</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Pet</span>();</span><br><span class="line"></span><br><span class="line">        dog.name = <span class="string">&quot;旺财&quot;</span>;</span><br><span class="line">        dog.age = <span class="number">3</span>;</span><br><span class="line">        dog.shout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>对象通过引用类型来操作：栈 - - -&gt;堆</strong><br><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135557990.png" alt="image-20220425135557990"></li></ul><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><ul><li><p><strong>该露的露，该藏的藏</strong></p></li><li><p>我们程序设计要追求“<strong>高内聚，低耦合</strong>”。高内聚就是类的内部数据细节由自己完成，不允许外部干涉；低耦合：仅暴露少量的方法给外部使用。</p></li><li><p>封装（数据的隐藏）</p></li><li><p>通常，应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，称为信息隐藏。</p></li><li><p>作用</p><ul><li>提高程序的安全性，保护数据</li><li>隐藏代码的实现细节</li><li>统一接口</li><li>系统可维护性增加了</li></ul></li></ul><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><ol><li>继承的本质是对某一批类的抽象，从而实现对世界更好地建模。</li><li>extends的意思是”扩展“。子类是父类的扩展，使用关键字extends来表示。</li><li><strong>Java中类只有单继承</strong>，没有多继承！一个类只能继承一个父类。</li><li>继承是类与类之间的一种关系，此外还有依赖、组合、聚合等。</li><li>继承关系的两个类，一个为子类（派生类），一个为<strong>父类（基类）</strong>子类继承父类。</li><li>子类和父类之间，从意义上讲应该具有”is a“的关系。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生类(子类)继承 人类(父类)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123; <span class="comment">/*Person extends Object*/</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子类继承了父类，就会<strong>拥有父类的全部方法</strong>，而<strong>private私有属性及方法无法继承</strong>。</li><li>在Java中，<strong>所有类，都默认直接或间接继承Object类</strong> (Ctrl+H 可以查看类关系)</li><li><strong>被final修饰的类</strong>，无法被继承（断子绝孙）。</li></ul><h2 id="super-amp-this"><a href="#super-amp-this" class="headerlink" title="super &amp; this"></a>super &amp; this</h2><ol><li><strong>super()调用父类的构造方法，必须在构造方法的第一个</strong></li><li><strong>super必须只能出现在子类的方法或构造方法中</strong></li><li>**super()和this()**不能同时调用构造方法，因为this也必须写在第一行</li><li>super与this的区别：<br> - <strong>super代表父类对象的引用</strong>，只能在继承条件下使用；（父类的构造）<br> - <strong>this调用自身对象，没有继承也可以使用</strong>。（本类的构造）</li></ol><p>&#x2F;&#x2F;<strong>隐藏代码，子类默认调用了父类的无参构造，要写只能写第一行</strong>（默认自动调用）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">super</span>(); </span><br></pre></td></tr></table></figure><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135723122.png" alt="image-20220425135723122"></p><h2 id="方法的重写"><a href="#方法的重写" class="headerlink" title="方法的重写"></a>方法的重写</h2><ol><li><strong>需要有继承关系</strong>，父类的功能不能满足子类，故需要重写</li><li>重写：<strong>子类的方法必须与父类方法必须一致，方法体不同</strong>。</li><li><strong>重写是方法的重写，与属性无关</strong></li><li>被**static(属于类，不属于实例)，final(常量方法)，private(私有)**修饰的方法不能重写</li><li>静态方法属于类，非静态方法属于对象</li></ol><p>注意点：<br>    - 方法名、参数列表必须相同<br>    - 修饰符范围可以扩大，不能缩小（public&gt;protect&gt;private）<br>    - 抛出的异常 范围可以被缩小，不能扩大</p><p>静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123; <span class="comment">//静态方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;B==&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123; <span class="comment">//继承</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A==&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//方法的调用之和左边定义的类型有关</span></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.test(); <span class="comment">//打印 A==&gt;test()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父类的引用指向了子类，但静态方法没有被重写</span></span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        b.test(); <span class="comment">//打印 B==&gt;test()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改A.java, B.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123; <span class="comment">//非静态方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;B==&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//重写了B的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A==&gt;test()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类的引用指向了子类</span></span><br><span class="line"><span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(); <span class="comment">//子类重写了父类的方法，执行子类的方法</span></span><br><span class="line">b.test(); <span class="comment">//打印变成了 A==&gt;test()</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">静态方法是类的方法，非静态方法是对象的方法</span></span><br><span class="line"><span class="comment">有static时，b调用了B类的方法，因为b是b类定义的</span></span><br><span class="line"><span class="comment">没有static时，b调用的是对象的方法，而b是A类new出来的对象，调用A的方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><ol><li><strong>动态编译：类型:可扩展</strong> </li><li>多态：*<em>即同一方法可以根据发送对象的不同而采用不同的行为方式</em>***（方法的多态）</li><li><strong>一个对象的实际类型是确定的，但可以指向对象的引用可以有很多</strong></li><li>多态存在条件：<ul><li><strong>有继承关系</strong></li><li><strong>子类重写父类方法</strong></li><li><strong>父类引用指向子类对象</strong></li></ul></li></ol><p>注意点：<br>     - <strong>多态是方法的多态，没有属性的多态</strong><br>     - 父类和子类，有联系 类型转换异常: ClassCastException</p><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135829617.png" alt="image-20220425135829617"></p><h2 id="instanceof和类型转换"><a href="#instanceof和类型转换" class="headerlink" title="instanceof和类型转换"></a>instanceof和类型转换</h2><ul><li><strong>instanceof 引用类型比较，判断一个对象是什么类型</strong></li></ul><p><strong>类型转换</strong></p><ol><li>父类引用指向子类的对象</li><li><strong>把子类转换为父类，向上转型，会丢失自己原来的一些方法</strong></li><li><strong>把父类转换为子类，向下转型，强制转换，才调用子类方法</strong></li><li><strong>方便方法的调用(转型)，减少重复的代码，简洁。</strong></li><li><strong>X instanceof Y，Y不是X的子类就会编译报错</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Object &gt; String</span></span><br><span class="line">    <span class="comment">// Objest &gt; Person &gt; Student</span></span><br><span class="line">    <span class="comment">// Objest &gt; Person &gt; Teacher</span></span><br><span class="line">    <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"><span class="comment">// X instanceof Y，X引用指向的对象是不是Y的子类</span></span><br><span class="line">    System.out.println(object <span class="keyword">instanceof</span> Student); <span class="comment">//true</span></span><br><span class="line">    System.out.println(object <span class="keyword">instanceof</span> Person); <span class="comment">//true</span></span><br><span class="line">    System.out.println(object <span class="keyword">instanceof</span> Teacher); <span class="comment">//false</span></span><br><span class="line">    System.out.println(object <span class="keyword">instanceof</span> Object); <span class="comment">//true</span></span><br><span class="line">    System.out.println(object <span class="keyword">instanceof</span> String); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//类型之间的转化：父-子（高-低）,低可以转换为高</span></span><br><span class="line">    <span class="type">Person</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Syudent</span>(); <span class="comment">//只能用Person方法（重写了用子类重写过的方法）</span></span><br><span class="line">    (Syudent)obj.go(); <span class="comment">//强转之后可以用Student方法(Student-&gt;go())</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Static"><a href="#Static" class="headerlink" title="Static"></a>Static</h1><ol><li>静态变量可以直接用类名访问，也称<strong>类变量。</strong></li><li>静态变量(或方法)对于类，<strong>所有对象（实例）所共享</strong>。</li><li>静态区代码 加载类时一起被初始化，最早执行且只执行一次（第一次new）。</li><li>Math-&gt;随机数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态导入包</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一种随机数，不用导包</span></span><br><span class="line">        System.out.println(Math.random()); <span class="comment">//0.7562202902634543</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二种随机数，静态导入包</span></span><br><span class="line">        System.out.println(random()); <span class="comment">//0.5391606223844663</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="抽象类-abstract"><a href="#抽象类-abstract" class="headerlink" title="抽象类(abstract)"></a>抽象类(abstract)</h1><ol><li>abstract修饰的类就是抽象类，修饰的方法就是抽象方法。</li><li>抽象类中可以没有抽象方法，但有<strong>抽象方法的类一定要声明为抽象类</strong>。</li><li>抽象类不能使用new来创建对象，它是用来让子类继承，。</li><li>抽象方法只有方法的声明，没有实现，让其子类实现</li><li>子类继承抽象类，必须实现抽象类的所有方法，否则该子类也要声明为抽象类。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//abstract 抽象类 类只能单继承（接口可以多继承）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Action</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//约束~有人帮我们实现~</span></span><br><span class="line">    <span class="comment">//抽象方法只有方法名，没有方法的实现</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doSth</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.不能new抽象类，只能靠子类去实现它，仅作为一个约束</span></span><br><span class="line">    <span class="comment">//2.抽象方法只能出现在抽象类中，抽象类可以有普通方法</span></span><br><span class="line">    <span class="comment">//3.抽象类有构造器，可以派生子类</span></span><br><span class="line">    <span class="comment">//4.抽象类的意义：约束，提高开发效率。但是类只能单继承，所以有局限 用的不多</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="接口-interface"><a href="#接口-interface" class="headerlink" title="接口(interface)"></a>接口(interface)</h1><ol><li>普通类：只有具体实现</li><li>抽象类：具体实现和规范(抽象方法)都有</li><li>接口：<strong>只有规范，没有方法实现</strong>，专业的约束！<strong>约束与实现分离：面向接口编程~</strong></li><li><strong>接口的本质是约束</strong>，就像人间法律一样，制定好大家都遵守</li></ol><p>注意点</p><ul><li>接口没有构造方法，不能被实例化</li><li>实现类必须要重写接口中的方法</li><li>实现类（implements） 可以实现多个接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//interface接口,接口都要有继承类</span></span><br><span class="line"><span class="comment">//实现类（implements 可以继承多个接口）</span></span><br><span class="line"><span class="comment">//多继承，利用接口实现多继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//定义的属性都是常量,默认修饰 public static final</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">AGE</span> <span class="operator">=</span> <span class="number">99</span>; <span class="comment">//一般不用</span></span><br><span class="line">    <span class="comment">//所有的定义的方法都是抽象的 默认public abstract</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">query</span><span class="params">()</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135954119.png" alt="image-20220425135954119"></p><h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><ul><li><strong>内部类就是在一个类的内部再定义一个类</strong>，比如A类中定义了一个B类，那么B就是A的内部类，而A相对B来说就是外部类<ol><li>成员内部类：<strong>可以操作外部类的私有属性及方法</strong></li></ol></li></ul><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425140033579.png" alt="image-20220425140033579"><br>   2. 静态内部类：static修饰，不能访问外部类私有属性</p><pre><code>  ![image-20220425140059300](java面向对象/image-20220425140059300.png)</code></pre><ol start="3"><li><p>局部内部类：外部类的方法里定义的类</p><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425140119427.png" alt="image-20220425140119427"></p></li><li><p>匿名内部类：没有名字初始化类</p></li></ol><p><img src="/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425140134054.png" alt="image-20220425140134054"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/11/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/image-20220425135432595.png&quot; alt=&quot;image-20220425135432595&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;面向</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java数组</title>
    <link href="http://example.com/2021/11/20/java%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2021/11/20/java%E6%95%B0%E7%BB%84/</id>
    <published>2021-11-20T05:26:33.000Z</published>
    <updated>2022-04-25T06:07:18.031Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425134842332.png" alt="image-20220425134842332"></p><h1 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h1><h2 id="数组的定义-1"><a href="#数组的定义-1" class="headerlink" title="数组的定义"></a>数组的定义</h2><ol><li>数组是<strong>相同类型数据的有序集合</strong></li><li>数组描述的是相同类型的若干数据，按照一定先后次序排序组合而成</li><li>其中，每一个数据称作一个数组元素，每个数组元素可以通过下标访问它们</li></ol><h2 id="数组的基本特点"><a href="#数组的基本特点" class="headerlink" title="数组的基本特点"></a>数组的基本特点</h2><ol><li>其<strong>长度是确定的</strong>，数组一旦被创建，它的大小就是不可改变的。</li><li>其元素必须是<strong>相同类型</strong>，不允许出现混合类型。</li><li>数组中的元素可以是任何数据类型，包括基本类型和引用类型。</li><li>数组变量属于引用类型，数组也可以看作对象，其中每个元素相当于该对象的成员变量。</li><li>数组本身就是对象，Java中对象是在堆中的，因此数组无论保存原始类型还是其他对象类型，</li><li><strong>数组本身是在堆中的</strong></li></ol><p>数组的声明创建</p><p>首先必须声明数组变量，才能在程序中使用数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar; <span class="comment">//首选</span></span><br><span class="line">dataType arrayRefVar[]; <span class="comment">//效果相同,但不是首选</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Java语言使用new操作符来创建数组，语法如下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> <span class="title class_">dataType</span>[arraySize]; <span class="comment">//int[] nums=new int[10]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>数组的元素是通过索引访问的，数组索引从0开始</li><li>获取数组长度：<strong>arrays.length</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] nums; <span class="comment">//1.声明一个数组</span></span><br><span class="line">nums = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>]; <span class="comment">//2.创建一个数组</span></span><br><span class="line"><span class="comment">//3.给数组元素赋值</span></span><br><span class="line">nums[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">nums[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">nums[<span class="number">2</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123; <span class="comment">//打印数组所有元素</span></span><br><span class="line">    System.out.println(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三种初始化及内存分析"><a href="#三种初始化及内存分析" class="headerlink" title="三种初始化及内存分析"></a>三种初始化及内存分析</h2><p>三种初始化</p><ul><li>静态初始化<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态初始化：创建+赋值</span></span><br><span class="line"><span class="type">int</span>[] a=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">Man[] mans=&#123;<span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>动态初始化<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//包含默认初始化</span></span><br><span class="line"><span class="type">int</span>[] a=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>]; <span class="comment">//默认值为0</span></span><br><span class="line">a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>默认初始化<ul><li>数组是引用类型，它的元素相当于类的实例变量，因此数组一经分配空间，其中的每个元素也被按照实例变量同样的方式被隐式初始化。</li></ul></li></ul><p>内存分析</p><p><img src="/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425135135208.png" alt="image-20220425135135208"></p><p><img src="/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425135146901.png" alt="image-20220425135146901"></p><h1 id="数组的使用"><a href="#数组的使用" class="headerlink" title="数组的使用"></a>数组的使用</h1><ul><li><p><strong>For-Each循环</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arrays = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="comment">//打印全部的数组元素 JDK1.5 没有下标</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> array : arrays) &#123;</span><br><span class="line">    System.out.println(array);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>数组作方法入参</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印数组元素</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] a)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">        System.out.print(a[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>数组作返回值</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//反转数组</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] reverse(<span class="type">int</span>[] arrays)&#123;</span><br><span class="line">    <span class="type">int</span>[] result = <span class="keyword">new</span> <span class="title class_">int</span>[arrays.length];</span><br><span class="line">    <span class="comment">//反转的操作</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">        result[i] = arrays[arrays.length-i-<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h1><ul><li>数组的工具类java.util.Arrays</li><li>由于数组对象本身并没有什么方法可以供我们使用，但<strong>API提供了一个工具类Arrays</strong>供我们使用。</li><li>Array类中的方法都是<strong>static修饰的静态方法</strong>，使用时直接使用类名进行调用，可以不用对象调用。</li><li>常用功能<ol><li><strong>给数组赋值</strong>：fill方法。</li><li><strong>排序</strong>：sort方法，升序。</li><li><strong>比较数组</strong>：equals方法比较数组中元素值是否相等。</li><li><strong>查找数组元素</strong>：binarySearch对排序好的数组进行二分查找法操作。</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9000</span>,<span class="number">32145</span>,<span class="number">451</span>,<span class="number">21</span>&#125;;</span><br><span class="line">System.out.println(a); <span class="comment">// [I@28d93b30 (hashcode)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Arrays.toString 打印数组元素</span></span><br><span class="line">System.out.println(Arrays.toString(a)); <span class="comment">//[1, 2, 3, 4, 9000, 32145, 451, 21]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二分法查找某值 返回下标</span></span><br><span class="line">System.out.println(Arrays.binarySearch(a, <span class="number">9000</span>)); <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//填充</span></span><br><span class="line">Arrays.fill(a,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>); <span class="comment">//数组[a[2]~a[4])之间填充0</span></span><br><span class="line">System.out.println(Arrays.toString(a)); <span class="comment">//[1, 2, 0, 0, 9000, 32145, 451, 21]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//升序排序</span></span><br><span class="line">Arrays.sort(a);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><ul><li>冒泡排序是八大排序最出名的排序算法。</li><li>代码：两层循环，<strong>外层冒泡轮数，里层依次比较</strong>。</li><li>当我们看到嵌套循环，应该立马就可以得出这个算法的**时间复杂度为O(n2)**。</li></ul><p>1.比较数组中两个相邻的元素，如果第一个数大于第二个数，交换它们位置<br>2.每一次比较，都会产生一个最大或最小的数字(升序为最大数)<br>3.<strong>下一轮则可以少一次排序</strong><br>4.依次循环，直到结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] array)&#123;</span><br><span class="line">    <span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//外层循环，次数length-1，列如10个数，外层循环9次</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//内层循环 ：array.length-1-i表示后面的循环不用比较已经挑出的最大数（最小数）</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length-<span class="number">1</span>-i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j]&gt;array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                temp=array[j];</span><br><span class="line">                array[j]=array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] a=&#123;<span class="number">8</span>,<span class="number">1</span>,<span class="number">35</span>,<span class="number">47</span>,<span class="number">19</span>,-<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="type">int</span>[] sort = sort(a);</span><br><span class="line">    System.out.println(Arrays.toString(sort)); <span class="comment">//[-2, 1, 8, 19, 35, 47]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h1><p><img src="/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425135335856.png" alt="image-20220425135335856"></p><p><img src="/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425135344307.png" alt="image-20220425135344307"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个二维数组 11*11  0：没有棋子，1：黑棋  2：白棋</span></span><br><span class="line"><span class="type">int</span>[][] array1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//输出原始的数组</span></span><br><span class="line">System.out.println(<span class="string">&quot;原始的数组：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span>[] array : array1) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i : array) &#123;</span><br><span class="line">        System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换为稀疏数组保存</span></span><br><span class="line"><span class="comment">//1.有效值的个数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//有效值总数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.创建一个稀疏数组</span></span><br><span class="line"><span class="type">int</span>[][] array2 = <span class="keyword">new</span> <span class="title class_">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.遍历二维数组，将有效值存放到稀疏数组</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//array1.length表示数组的行数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line"><span class="comment">//array1.length[i]表述第i行的的列数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array1[i].length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            array2[count][<span class="number">0</span>] = i;</span><br><span class="line">            array2[count][<span class="number">1</span>] = j;</span><br><span class="line">            array2[count][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.输出稀疏数组</span></span><br><span class="line">System.out.println(<span class="string">&quot;稀疏数组：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array2[i].length; j++) &#123;</span><br><span class="line">        System.out.print(array2[i][j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 结果：</span></span><br><span class="line"><span class="comment">输出原始的数组</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00100000000</span></span><br><span class="line"><span class="comment">00020000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">00000000000</span></span><br><span class="line"><span class="comment">稀疏数组</span></span><br><span class="line"><span class="comment">11112</span></span><br><span class="line"><span class="comment">121</span></span><br><span class="line"><span class="comment">232</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/11/20/java%E6%95%B0%E7%BB%84/image-20220425134842332.png&quot; alt=&quot;image-20220425134842332&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;数组的定义&quot;&gt;&lt;a href=&quot;#数组的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java方法</title>
    <link href="http://example.com/2021/11/13/java%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2021/11/13/java%E6%96%B9%E6%B3%95/</id>
    <published>2021-11-13T05:26:14.000Z</published>
    <updated>2022-04-25T06:06:44.730Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/11/13/java%E6%96%B9%E6%B3%95/image-20220425134401499.png" alt="image-20220425134401499"></p><h1 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h1><p>方法的定义：</p><p>Java的方法类似与其他语言的函数，是<strong>一段用来完成特定功能的代码片段</strong>。<br>方法包含一个方法头和一个方法体。</p><ul><li>修饰符：可选，定义了方法的访问类型，告诉编译器如何调用该方法。</li><li>返回值类型：方法可能会返回值。returnValueType是方法返回值的数据类型。有些方法没有返回值，则returnValueType为关键字void。</li><li>方法名：是方法的实际名称，方法名与参数表共同构成方法签名。</li><li>参数类型：像一个占位符。方法被调用时，传递值给参数，该值称为实参或变量。参数列表是指方法的参数类型、顺序和参数个数。参数是可选的，方法可以不包含任何参数。</li><li>形式参数：在方法被调用时用于接收外界输入的数据。</li><li>实参：调用方法时实际传给方法的数据。</li><li>方法体：方法体包含具体的语句，定义该方法的功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修饰符 返回值类型 方法名（参数类型 参数名,...）&#123;</span><br><span class="line">   方法体...</span><br><span class="line">   <span class="keyword">return</span> 返回值；</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法的调用：</p><ol><li><del>调用方法：对象名.方法名(实参列表)</del>。</li><li>Java支持两种调用方法的方式，根据方法是否返回值来选择。</li><li>当方法返回一个值的时候，方法调用通常被当成一个值</li></ol><ul><li><code>int larger = max(30,40); </code></li></ul><ol><li><strong>如果方法返回值是void，方法调用一定是一条语句。</strong></li><li>扩展：值传递和引用传递 ( <strong>Java都是值传递</strong>)。</li><li><strong>调用其他类的方法，除非是static静态方法，不然必须实例化这个类(new)</strong></li></ol> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">add</span> <span class="operator">=</span> Demo01.add(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// 通过类名直接调用静态方法</span></span><br><span class="line">        System.out.println(add); <span class="comment">// 3</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// static静态方法，否则就要new实例化来调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="值传递和引用传递"><a href="#值传递和引用传递" class="headerlink" title="值传递和引用传递"></a>值传递和引用传递</h1><p><img src="/2021/11/13/java%E6%96%B9%E6%B3%95/image-20220425134623954.png" alt="image-20220425134623954"></p><p><img src="/2021/11/13/java%E6%96%B9%E6%B3%95/image-20220425134641256.png" alt="image-20220425134641256"></p><h1 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h1><ul><li>Jdk1.5开始，Java支持传递同类型的可变参数给一个方法。</li><li>在方法声明中，在指定参数类型后加一个省略号 (…)。</li><li>一个方法中只能指定一个可变参数，<strong>它必须是方法的最后一个参数。</strong></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印最大值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">int</span>... num)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num.length==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;没有值传入&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> num[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; num.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] &gt; result)&#123;</span><br><span class="line">            result = num[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;最大值是：&quot;</span>+result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    printMax(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>); <span class="comment">//最大值是：4</span></span><br><span class="line">    printMax(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;); <span class="comment">//最大值是：5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h1><p>有时候你希望运行一个程序时候传递给它消息，这要靠传递命令行参数给main()函数实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//args.length 数组长度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]: &quot;</span>+args[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到当前类的文件夹，打开cmd.<br><img src="/2021/11/13/java%E6%96%B9%E6%B3%95/image-20220425134726211.png" alt="image-20220425134726211"></p><h1 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h1><p>重载是在<strong>一个类中</strong>，有<strong>相同的方法名</strong>，<strong>参数列表不同</strong>的方法。</p><p>方法重载的规则：</p><ul><li><strong>方法名称必须相同</strong></li><li><strong>参数列表必须不同</strong>（个数、参数类型、或排序不同）</li><li><strong>返回类型可以相同也可以不相同</strong></li><li>仅仅返回类型不同不足以成为方法的重载</li></ul><p>实现理论<br>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错。</p><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><ul><li><p>递归就是：<strong>A方法调用A方法，自己调用自己！</strong></p></li><li><p>递归策略只需少量的代码可描述解题过程中多次重复计算，大大减少了程序的代码量。递归的能力在于用有限的语句来定义对象的无限集合。</p></li><li><p>递归结构</p><ul><li><strong>递归头</strong>：什么时候不调用自身方法，没有头 将陷入死循环。</li><li><strong>递归体</strong>：什么时候需要调用自身方法。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//阶乘 n! n*(n-1)*...*2*1</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> n*f(n-<span class="number">1</span>); <span class="comment">//递归：调用自身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(f(<span class="number">5</span>)); <span class="comment">//5!= 120</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/11/13/java%E6%96%B9%E6%B3%95/image-20220425134401499.png&quot; alt=&quot;image-20220425134401499&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;方法的定义和调用&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java流程控制</title>
    <link href="http://example.com/2021/11/10/java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2021/11/10/java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2021-11-10T05:25:55.000Z</published>
    <updated>2022-04-25T06:12:03.401Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/11/10/java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/image-20220425134119915.png" alt="image-20220425134119915"></p><h1 id="用户交互Scanner"><a href="#用户交互Scanner" class="headerlink" title="用户交互Scanner"></a>用户交互Scanner</h1><ul><li><p>之前我们学的基本语法并没有实现<strong>程序和人的交互</strong>，Java给我们提供了一个工具类，可以获取用户的输入java.util.Scanner是Java5的新特征，我们通过Scanner类来获取用户的输入。</p></li><li><p>基本语法<br><code>Scanner s = new Scanner(System.in);</code></p></li><li><p>通过Scanner类的 next()与 nextLine()方法获取用户的字符串，读取前一般用hasNext()与hasNextLine()判断是否还有输入的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个扫描器对象</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;使用next方式接收&quot;</span>);</span><br><span class="line"><span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line"><span class="keyword">if</span>(scanner.hasNext())&#123;  <span class="comment">//使用hasNextLie()会接收一行 &quot;hello word&quot;</span></span><br><span class="line">    <span class="comment">//使用next方式接收</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next(); </span><br><span class="line">    System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+str);</span><br><span class="line">    <span class="comment">//input: hello word</span></span><br><span class="line">    <span class="comment">//输入的内容为：hello</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//凡是属于IO流的类如果不关闭会一直占用资源</span></span><br><span class="line">scanner.close();</span><br></pre></td></tr></table></figure><p>next()<br>1. 一定要读取到有效字符才可以结束输入<br>2. 对输入有效字符之前遇到的空白，next()方法会将其去掉<br>3. 只有输入有效字符后才将其后面输入的空白作为结束符<br>4. next()不能得到带有空格的字符串<br>nextLine()<br>1. 以Enter作为结束符，即返回输入回车之前所有的字符<br>2. nextLine()可以获取空白</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从键盘接收数据</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+str);</span><br><span class="line">scanner.close();</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line"><span class="comment">//判断输入的是否为整数</span></span><br><span class="line"><span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">    <span class="type">int</span> i=scanner.nextInt();</span><br><span class="line">    System.out.println(<span class="string">&quot;输入的整数为：&quot;</span>+i);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;输入的不是整数数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="if-选择结构"><a href="#if-选择结构" class="headerlink" title="if 选择结构"></a>if 选择结构</h1><ul><li>if单选择结构 if( )</li><li>if双选择结构 if( ){ }else{ }</li><li>if多选择结构 if( ){ }else if{ }else{}</li><li>嵌套的if结构 if( ){ if( ) }</li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">80</span>;</span><br><span class="line"><span class="keyword">if</span>(a&gt;<span class="number">60</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(a&gt;<span class="number">80</span>) System.out.println(<span class="string">&quot;且优秀&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;缺考&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>; <span class="comment">//JDK新特性 可以是字符串(字符本质还是数字)</span></span><br><span class="line"><span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">//可选，跳出当前结构</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;合格&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">//默认，以上值没匹配到</span></span><br><span class="line">        System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IDEA反编译之后.class文件与源代码对比<br><img src="/2021/11/10/java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/image-20220425134252584.png" alt="image-20220425134252584"></p><h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//（初始化;条件判断;迭代）</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">    i++;</span><br><span class="line">    sum+=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(; ; )&#123;...&#125; <span class="comment">//死循环</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//练习：输出1-1000能被5整除的数，每行输出3个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.print(i+<span class="string">&quot;\t&quot;</span>); <span class="comment">//输出完不换行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i%(<span class="number">3</span>*<span class="number">5</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//练习2：输出九九乘法表</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">        System.out.print(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增强for循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> [] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;; <span class="comment">//定义一个数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">    System.out.println(x); <span class="comment">//遍历数组的元素 10 20 30 40 50</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相当于</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    System.out.println(numbers[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="break-amp-continue"><a href="#break-amp-continue" class="headerlink" title="break &amp; continue"></a>break &amp; continue</h1><ul><li>break可用在任何循环的主体部分，由于<strong>强行退出循环</strong>，也可以用在switch语句。</li><li>continue用于循环语句中，<strong>终止某次循环过程</strong>，跳过剩余语句，之间进行下一次循环条件判断。</li><li>标签：后面跟一个冒号的标识符 label:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印101-150之间所有的质数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">outer:<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">101</span>;i&lt;=<span class="number">150</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">2</span>;j&lt;i/<span class="number">2</span>;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%j==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span> outer; <span class="comment">//不建议使用标签</span></span><br><span class="line">    &#125;</span><br><span class="line">    System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/11/10/java%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/image-20220425134119915.png&quot; alt=&quot;image-20220425134119915&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;用户</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java简介</title>
    <link href="http://example.com/2021/11/06/java%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2021/11/06/java%E7%AE%80%E4%BB%8B/</id>
    <published>2021-11-06T05:25:35.000Z</published>
    <updated>2022-04-25T06:05:45.873Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425132734816.png" alt="image-20220425132734816"></p><h1 id="JDK-JRE-和JVm"><a href="#JDK-JRE-和JVm" class="headerlink" title="JDK JRE 和JVm"></a>JDK JRE 和JVm</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425132823978.png" alt="image-20220425132823978"></p><h1 id="常用的Dos命令"><a href="#常用的Dos命令" class="headerlink" title="常用的Dos命令"></a>常用的Dos命令</h1><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 盘符切换 E:</span><br><span class="line"># 查看当前目录下所有文件 <span class="built_in">dir</span></span><br><span class="line"># 切换目录 <span class="built_in">cd</span> /d E:\idea</span><br><span class="line"># 返回上一级目录 <span class="built_in">cd</span> ..</span><br><span class="line"># 进入同级目录下的下一级目录 <span class="built_in">cd</span> tmp(该目录下的文件名)</span><br><span class="line"># 清屏 <span class="built_in">cls</span> (clear screen)</span><br><span class="line"># 退出终端 <span class="keyword">exit</span></span><br><span class="line"># 查看电脑当前IP地址 <span class="built_in">ipconfig</span></span><br><span class="line"></span><br><span class="line"># 打开计算器 calc</span><br><span class="line"># 打开画图 mspaint</span><br><span class="line"># 新建记事本 notepad</span><br><span class="line"></span><br><span class="line"># 在当前目录新建文件夹 <span class="built_in">md</span> test(文件夹名)</span><br><span class="line"># 新建文件 <span class="built_in">cd</span>&gt; a.txt(文件名)</span><br><span class="line"># 删除文件 <span class="built_in">del</span> a.txt(文件名)</span><br><span class="line"># 删除目录 <span class="built_in">rd</span> test(目录名)</span><br><span class="line"></span><br><span class="line"># <span class="built_in">ping</span>命令(复制链接进入Dos直接单击鼠标右键粘贴)</span><br><span class="line"><span class="built_in">ping</span> www.baidu.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="java运行机制"><a href="#java运行机制" class="headerlink" title="java运行机制"></a>java运行机制<img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425132931492.png" alt="image-20220425132931492"></h1><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133112376.png" alt="image-20220425133112376"></p><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133156841.png" alt="image-20220425133156841"></p><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>所有的标识符都应该以字母(A-Z或者a-z),美元符（$)、或者下划线（_）开始<br>首字符之后可以是字母(A-Z或者a-z),美元符（$)、下划线（_）或数字的任何字符组合不能使用关键字作为变量名或方名。<br>标识符是大小写敏感的<br>合法标识符举例: age、$salary._value、_1_value<br>非法标识符举例:123abc、-salary、#abc<br>可以使用中文</p><h1 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h1><p>1。不能对布尔值进行转换<br>2。不能把对象类型转换为不相干的类型<br>3．在把高容量转换到低容量的时候，强制转换<br>4。转换的时候可能存在内存溢出，或者精度问题!</p><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133404411.png" alt="image-20220425133404411"></p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133635603.png" alt="image-20220425133635603"></p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133702361.png" alt="image-20220425133702361"></p><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133735623.png" alt="image-20220425133735623"></p><h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133743159.png" alt="image-20220425133743159"></p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425133941593.png" alt="image-20220425133941593"></p><h1 id="javadoc-生成文档"><a href="#javadoc-生成文档" class="headerlink" title="javadoc 生成文档"></a>javadoc 生成文档</h1><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425134002967.png" alt="image-20220425134002967"></p><p><img src="/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425134013016.png" alt="image-20220425134013016"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/11/06/java%E7%AE%80%E4%BB%8B/image-20220425132734816.png&quot; alt=&quot;image-20220425132734816&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;JDK-JRE-和JVm&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>权限管理和备份</title>
    <link href="http://example.com/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/"/>
    <id>http://example.com/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/</id>
    <published>2021-10-17T04:21:21.000Z</published>
    <updated>2022-04-25T05:11:36.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131034090.png" alt="image-20220425131034090"></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>用户表：mysql.user</p><p>本质：对这张表进行，增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户  CREATE USER 用户名 IDENTIFIED BY &#x27;密码&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> sanjin IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改当前密码）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改指定用户密码）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> sanjin <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名  rename user 原名字 to 新名字</span></span><br><span class="line">RENAME <span class="keyword">USER</span> sanjin <span class="keyword">TO</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户授权   ALL PRIVILEGES 全部的权限   库，表</span></span><br><span class="line"><span class="comment">-- ALL PRIVILEGES 除了给别人授权，其他都能干</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> sanjin2  <span class="comment">-- 查看指定用户的权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> root<span class="variable">@localhost</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 撤销权限 REVOKE 哪些权限，在哪个库撤销，给谁撤销</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> sanjin2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h2><p>MySQL数据库备份的方式</p><ol><li><p>直接拷贝物理文件</p><p><img src="/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131121216.png" alt="image-20220425131121216"></p></li><li><p>数据库管理工具- 在想要导出的表或者库中，右键选择备份和导出</p></li><li><p>直接拷贝数据库文件和相关配置文件</p></li></ol><p><strong>mysqldump客户端</strong><br>作用 :</p><ul><li>转储数据库</li><li>搜集数据库进行备份</li><li>将数据转移到另一个SQL服务器,不一定是MySQL服务器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 导出</span><br><span class="line">1. 导出一张表 -- mysqldump -uroot -p123456 school student &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表名 &gt; 文件名(D:/a.sql)</span><br><span class="line">2. 导出多张表 -- mysqldump -uroot -p123456 school student result &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表1 表2 表3 &gt; 文件名(D:/a.sql)</span><br><span class="line">3. 导出所有表 -- mysqldump -uroot -p123456 school &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 &gt; 文件名(D:/a.sql)</span><br><span class="line">4. 导出一个库 -- mysqldump -uroot -p123456 -B school &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 -B 库名 &gt; 文件名(D:/a.sql)</span><br><span class="line"></span><br><span class="line">可以-w携带备份条件</span><br><span class="line"></span><br><span class="line">-- 导入</span><br><span class="line">1. 在登录mysql的情况下：-- source D:/a.sql</span><br><span class="line">　　source 备份文件</span><br><span class="line">2. 在不登录的情况下</span><br><span class="line">　　mysql -u用户名 -p密码 库名 &lt; 备份文件</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131034090.png&quot; alt=&quot;image-20220425131</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>索引</title>
    <link href="http://example.com/2021/10/17/%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/2021/10/17/%E7%B4%A2%E5%BC%95/</id>
    <published>2021-10-17T04:20:57.000Z</published>
    <updated>2022-04-25T05:09:26.712Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130631118.png" alt="image-20220425130631118"></p><h1 id="索引的作用"><a href="#索引的作用" class="headerlink" title="索引的作用"></a>索引的作用</h1><p>定义：MySQL官方对索引的定义为:索引(Index）是帮助MySQL高效获取数据的数据结构。提取句子主干，就可以得到索引的本质:索引是数据结构。</p><p>作用：</p><ol><li>提高查询速度</li><li>确保数据的唯一性</li><li>可以加速表和表之间的连接 , 实现表与表之间的参照完整性</li><li>使用分组和排序子句进行数据检索时 , 可以显著减少分组和排序的时间</li><li>全文检索字段进行搜索优化.</li></ol><p>这些数据结构以某种方式引用(指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。</p><p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130656753.png" alt="image-20220425130656753"></p><h1 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h1><p><strong>在一个表中，主键索引只能有一个，唯一索引可以有多个</strong></p><ul><li>主键索引 （PRIMARY KEY）<br>   唯一的标识，主键不可重复，只能有一个列作为主键</li><li>唯一索引 （UNIQUE KEY）<br>  避免重复的列出现，唯一索引可以重复，多个列都可以标识唯一索引</li><li>常规索引（KEY&#x2F;INDEX）<br>  默认的，index,key关键字来设置</li><li>全文索引（FULLTEXT）<br>  在特点的数据库引擎下才有，MyISAM<br>  快速定位数据</li></ul><h1 id="索引-实际操作"><a href="#索引-实际操作" class="headerlink" title="索引-实际操作"></a>索引-实际操作</h1><h4 id="查看索引信息"><a href="#查看索引信息" class="headerlink" title="查看索引信息"></a>查看索引信息</h4><p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130822011.png" alt="image-20220425130822011"></p><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#方法一：创建表时</span></span><br><span class="line"><span class="comment">  　　CREATE TABLE 表名 (</span></span><br><span class="line"><span class="comment">               字段名1 数据类型 [完整性约束条件…],</span></span><br><span class="line"><span class="comment">               字段名2 数据类型 [完整性约束条件…],</span></span><br><span class="line"><span class="comment">               [UNIQUE | FULLTEXT | SPATIAL ]   INDEX | KEY</span></span><br><span class="line"><span class="comment">               [索引名] (字段名[(长度)] [ASC |DESC])</span></span><br><span class="line"><span class="comment">               );</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#方法二：CREATE在已存在的表上创建索引</span></span><br><span class="line"><span class="comment">       CREATE [UNIQUE | FULLTEXT | SPATIAL ] INDEX 索引名</span></span><br><span class="line"><span class="comment">                    ON 表名 (字段名[(长度)] [ASC |DESC]) ;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#方法三：ALTER TABLE在已存在的表上创建索引</span></span><br><span class="line"><span class="comment">       ALTER TABLE 表名 ADD [UNIQUE | FULLTEXT | SPATIAL ] INDEX</span></span><br><span class="line"><span class="comment">                            索引名 (字段名[(长度)] [ASC |DESC]) ;</span></span><br><span class="line"><span class="comment">                           </span></span><br><span class="line"><span class="comment">                           </span></span><br><span class="line"><span class="comment">#删除索引：DROP INDEX 索引名 ON 表名字;</span></span><br><span class="line"><span class="comment">#删除主键索引: ALTER TABLE 表名 DROP PRIMARY KEY;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#显示索引信息: SHOW INDEX FROM student;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="增加全文索引"><a href="#增加全文索引" class="headerlink" title="增加全文索引"></a>增加全文索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*增加全文索引*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `school`.`student` <span class="keyword">ADD</span> FULLTEXT INDEX `studentname` (`StudentName`);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*EXPLAIN : 分析SQL语句执行性能*/</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno<span class="operator">=</span><span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用全文索引*/</span></span><br><span class="line"><span class="comment">-- 全文搜索通过 MATCH() 函数完成。</span></span><br><span class="line"><span class="comment">-- 搜索字符串作为 against() 的参数被给定。搜索以忽略字母大小写的方式执行。对于表中的每个记录行，MATCH() 返回一个相关性值。即，在搜索字符串与记录行在 MATCH() 列表中指定的列的文本之间的相似性尺度。</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname) AGAINST(<span class="string">&#x27;love&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">开始之前，先说一下全文索引的版本、存储引擎、数据类型的支持情况</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">MySQL 5.6 以前的版本，只有 MyISAM 存储引擎支持全文索引；</span></span><br><span class="line"><span class="comment">MySQL 5.6 及以后的版本，MyISAM 和 InnoDB 存储引擎均支持全文索引;</span></span><br><span class="line"><span class="comment">只有字段的数据类型为 char、varchar、text 及其系列才可以建全文索引。</span></span><br><span class="line"><span class="comment">测试或使用全文索引时，要先看一下自己的 MySQL 版本、存储引擎和数据类型是否支持全文索引。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试索引"><a href="#测试索引" class="headerlink" title="测试索引"></a>测试索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建一个uer表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user` (</span><br><span class="line">`id` <span class="type">BIGINT</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`phone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`gender` TINYINT(<span class="number">4</span>) UNSIGNED <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`age` TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`create_time` DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">`update_time` <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入100万数据</span></span><br><span class="line">DELIMITER $$ <span class="comment">--  写函数之前必写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--函数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line">    <span class="keyword">RETURNS</span> <span class="type">INT</span> </span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">WHILE i<span class="operator">&lt;</span>num DO</span><br><span class="line"><span class="comment">-- 插入语句</span></span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)</span><br><span class="line">    <span class="comment">--RAND()*9999999表示（0-1）*9999999=（0-9999999）</span></span><br><span class="line">    <span class="keyword">VALUE</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;534240118@qq.com&#x27;</span>,<span class="built_in">FLOOR</span> (CONCAT(<span class="string">&#x27;18&#x27;</span>,RAND()<span class="operator">*</span><span class="number">9999999</span>)),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">2</span>),UUID(),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line">    <span class="keyword">SET</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建索引</span></span><br><span class="line"><span class="comment">-- id _ 表名_字段名</span></span><br><span class="line"><span class="comment">-- create index on 字段</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX id_app_user_name <span class="keyword">ON</span> app_user(`name`); <span class="comment">-- 0.001 s</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>  <span class="comment">-- 查询一条记录</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130631118.png&quot; alt=&quot;image-20220425130631118&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;索引的作用&quot;&gt;&lt;a href=&quot;#索引的作用&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>事务</title>
    <link href="http://example.com/2021/10/17/%E4%BA%8B%E5%8A%A1/"/>
    <id>http://example.com/2021/10/17/%E4%BA%8B%E5%8A%A1/</id>
    <published>2021-10-17T04:20:32.000Z</published>
    <updated>2022-04-25T05:05:39.818Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130346030.png" alt="image-20220425130346030"></p><h1 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h1><ul><li><strong>事务就是将一组SQL语句放在同一批次内去执行</strong></li><li><strong>如果一个SQL语句出错,则该批次内的所有SQL都将被取消执行</strong></li><li><strong>MySQL事务处理只支持InnoDB和BDB数据表类型</strong></li><li>SQL执行， A给B转账 A 1000–&gt; 200 B 200<br>SQL 执行， B收到A的钱 A 800 — B 400<br>将一组SQL放在一个批次中执行</li></ul><h1 id="ACID原则"><a href="#ACID原则" class="headerlink" title="ACID原则"></a>ACID原则</h1><p>原子性（Atomicity）<br>要么都成功，要么都失败,</p><p>一致性（Consistency）<br>事务前后的数据完整性要保持一致</p><p>持久性（Durability）<br>事务没有提交，恢复到原状（宕机），事务一旦提交就不可逆转，被持久化到数据库中</p><p>隔离性（Isolation）<br>事务产生多并发时，互不干扰</p><h1 id="事物的隔离级别"><a href="#事物的隔离级别" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h1><p><strong>脏读：</strong><br>指一个事务读取了另外一个事务未提交的数据。<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130451819.png" alt="image-20220425130451819"><br><strong>不可重复读：</strong><br>在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对)<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130458906.png" alt="image-20220425130458906"></p><p><strong>虚读(幻读)</strong><br>一个事务范围内两个相同的查询却返回了不同数据。对应的是插入操作。  （比不可重复读多一条数据）<br>（一般是行影响，多了一行）<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130507594.png" alt="image-20220425130507594"></p><h1 id="执行事务"><a href="#执行事务" class="headerlink" title="执行事务"></a>执行事务</h1><p><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130518542.png" alt="image-20220425130518542"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql 自动开启事务提交</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">0</span> <span class="comment">-- 关闭</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span> <span class="comment">-- 开启（默认的）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 手动处理事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">0</span> <span class="comment">-- 关闭自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">-- 标记一个事务的开始，从这个之后的SQP都在同一个事务内</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> XX</span><br><span class="line"><span class="keyword">INSERT</span> XX</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交 ： 持久化(成功)</span></span><br><span class="line"><span class="keyword">COMMIT</span> </span><br><span class="line"><span class="comment">-- 回滚：  回到原来的样子（失败）</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="comment">-- 事务结束</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">1</span> <span class="comment">-- 开启自动提交</span></span><br><span class="line"><span class="comment">-- 了解</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> 保存点名称 <span class="comment">-- 设置一个事务的保存点</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> 保存点名 <span class="comment">-- 回滚到保存点</span></span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> 保存点 <span class="comment">-- 删除保存点</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130346030.png&quot; alt=&quot;image-20220425130346030&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;什么是事务&quot;&gt;&lt;a href=&quot;#什么是事务&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql函数</title>
    <link href="http://example.com/2021/10/17/Mysql%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2021/10/17/Mysql%E5%87%BD%E6%95%B0/</id>
    <published>2021-10-17T04:20:08.000Z</published>
    <updated>2022-04-25T05:02:47.952Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130247899.png" alt="image-20220425130247899"></p><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-8</span>) <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">9.4</span>) <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.4</span>)  <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> RAND() <span class="comment">-- 返回0-1随机数</span></span><br><span class="line"><span class="keyword">SELECT</span> SIGN(<span class="number">-10</span>) <span class="comment">-- 判断一个数的符号 0-0 负数返回-1 正数返回1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;2323232&#x27;</span>) <span class="comment">-- 返回字符串长度</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;我&#x27;</span>,<span class="string">&#x27;233&#x27;</span>) <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;java&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;cccc&#x27;</span>) <span class="comment">-- 从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>) </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;坚持就能成功&#x27;</span>,<span class="string">&#x27;坚持&#x27;</span>,<span class="string">&#x27;努力&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓 周 的同学 ，改成邹</span></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(studentname,<span class="string">&#x27;周&#x27;</span>,<span class="string">&#x27;邹&#x27;</span>) <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间跟日期函数（记住）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> CURDATE() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> LOCATIME()  <span class="comment">-- 本地时间</span></span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE()  <span class="comment">-- 系统时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(NOW())</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 系统</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SYSTEM_USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> VERSION()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h1><p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130158947.png" alt="image-20220425130158947"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 聚合函数</span></span><br><span class="line"> <span class="comment">/*COUNT:非空的*/</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(studentname) <span class="keyword">FROM</span> student;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> student;  <span class="comment">/*推荐*/</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">-- 从含义上讲，count(1) 与 count(*) 都表示对全部数据行的查询。</span></span><br><span class="line"> <span class="comment">-- count(字段) 会统计该字段在表中出现的次数，忽略字段为null 的情况。即不统计字段为null 的记录。</span></span><br><span class="line"> <span class="comment">-- count(*) 包括了所有的列，相当于行数，在统计结果的时候，包含字段为null 的记录；</span></span><br><span class="line"> <span class="comment">-- count(1) 用1代表代码行，在统计结果的时候，包含字段为null 的记录 。</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> 很多人认为count(1)执行的效率会比count(*)高，原因是count(*)会存在全表扫描，</span></span><br><span class="line"><span class="comment"> 而count(1)可以针对一个字段进行查询。其实不然，count(1)和count(*)都会对全表进行扫描，</span></span><br><span class="line"><span class="comment"> 统计所有记录的条数，包括那些为null的记录，因此，它们的效率可以说是相差无几。而</span></span><br><span class="line"><span class="comment"> count(字段)则与前两者不同，它会统计该字段不为null的记录条数。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 下面它们之间的一些对比：</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 1）在表没有主键时，count(1)比count(*)快</span></span><br><span class="line"><span class="comment"> 2）有主键时，主键作为计算条件，count(主键)效率最高；</span></span><br><span class="line"><span class="comment"> 3）若表格只有一个字段，则count(*)效率较高。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(StudentResult) <span class="keyword">AS</span> 总和 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(StudentResult) <span class="keyword">AS</span> 平均分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数据库级别的MD5加密"><a href="#数据库级别的MD5加密" class="headerlink" title="数据库级别的MD5加密"></a>数据库级别的MD5加密</h1><p>MD5即Message-Digest Algorithm 5（信息-摘要算法5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法之一（又译摘要算法、哈希算法），主流编程语言普遍已有MD5实现。将数据（如汉字）运算为另一固定长度值，是杂凑算法的基础原理，MD5的前身有MD2、MD3和MD4。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `testmd5` (</span><br><span class="line"> `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `pwd` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入一些数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;kuangshen&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;qinjiang&#x27;</span>,<span class="string">&#x27;456789&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果我们要对pwd这一列数据进行加密，语法是：</span></span><br><span class="line"><span class="keyword">update</span> testmd5 <span class="keyword">set</span> pwd <span class="operator">=</span> md5(pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果单独对某个用户(如kuangshen)的密码加密：</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;kuangshen2&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">update</span> testmd5 <span class="keyword">set</span> pwd <span class="operator">=</span> md5(pwd) <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;kuangshen2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入新的数据自动加密</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;kuangshen3&#x27;</span>,md5(<span class="string">&#x27;123456&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询登录用户信息（md5对比使用，查看用户输入加密后的密码进行比对）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;kuangshen&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130236581.png" alt="image-20220425130236581"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130247899.png&quot; alt=&quot;image-20220425130247899&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;常用函数&quot;&gt;&lt;a href=&quot;#常用函</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库的增删改查</title>
    <link href="http://example.com/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://example.com/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</id>
    <published>2021-10-16T04:19:49.000Z</published>
    <updated>2022-04-25T04:59:25.423Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425124956760.png" alt="image-20220425124956760"></p><h1 id="DML（增删改）"><a href="#DML（增删改）" class="headerlink" title="DML（增删改）"></a>DML（增删改）</h1><h2 id="插入-insert"><a href="#插入-insert" class="headerlink" title="插入  insert"></a>插入  insert</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入语句（添加）</span></span><br><span class="line"><span class="comment">-- insert into 表名（[字段一], [字段二]）values(&#x27;值1&#x27;),(&#x27;值2&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` (`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大四&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 一般写插入语句，我们一定要数据和字段一一对应。</span></span><br><span class="line"><span class="comment">-- 插入多个字段</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span> (<span class="string">&#x27;大二&#x27;</span>),(<span class="string">&#x27;大一&#x27;</span>);</span><br><span class="line"><span class="comment">--gradeid无默认值 要插入这个数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`id`,`name`,`pwd`,`sex`,`gradeid`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;aaaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>语法：– <strong>insert into 表名（[字段一], [字段二]）values(‘值1’,‘值2’)</strong><br>注意事项：<br><strong>字段和字段之间用逗号分开</strong><br><strong>字段可以省略，但是后面的值必须一一对应</strong><br><strong>可以同时插入多条数据，VALUES后面的值需要使用，隔开即可values(‘值1’),(‘值2’)</strong></p><h2 id="修改-update"><a href="#修改-update" class="headerlink" title="修改 update"></a>修改 update</h2><p>语法；<br><strong>UPDATE 表名 set column_name &#x3D; value,[column_name &#x3D; value,…] where [条件]</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改学员名字</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;aaa&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 不指定条件的情况下，会改动所有表</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;bbb&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>条件：where 子句 运算符 id 等于 某个值，大于某个值，在某个区间内修改<br>操作符返回布尔值</p><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125042322.png" alt="image-20220425125042322"></p><p>注意：<br>column_name 是数据库的列，带上&#96;&#96;<br>条件，是筛选的条件，如果没有指定，则会修改所有的列<br>value 是一个具体的值，也可以是一个变量<br>多个设置的属性之间，使用英文逗号隔开<br>UPDATE <code>student</code> SET <code>birthday</code>&#x3D;CURRENT_TIME where <code>name</code>&#x3D;’bbb’ AND SEX &#x3D; ‘男’</p><h2 id="删除-delete"><a href="#删除-delete" class="headerlink" title="删除 delete"></a>删除 delete</h2><p>语法：<code>delete from 表名 [where 条件]</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据 (避免这样写)</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="comment">-- 删除指定</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student` <span class="keyword">where</span> id<span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>TRUNCATE:</strong><br>作用：完全清空一个数据库，表的结构和索引不会变<br>相同点： 都能删除数据，都不会删除表结构</p><p>不同：</p><ul><li>TRUNCATE 重新设置自增列 计数器会归零</li><li>TRUNCATE 不会影响事务<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试delete 和 truncate 区别</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`coll` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `test`(`coll`) <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>),(<span class="string">&#x27;2&#x27;</span>),(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test` <span class="comment">-- 删除后不会影响自增</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> `test` <span class="comment">-- 自增会归零</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="DQL（查询）"><a href="#DQL（查询）" class="headerlink" title="DQL（查询）"></a>DQL（查询）</h1><h2 id="创建基础数据库（代码）"><a href="#创建基础数据库（代码）" class="headerlink" title="创建基础数据库（代码）"></a>创建基础数据库（代码）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">```<span class="keyword">sql</span></span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> `school`;</span><br><span class="line"><span class="comment">-- 创建一个school数据库</span></span><br><span class="line">use `school`;<span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `student`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `student`(</span><br><span class="line">`studentno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `loginpwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `studentname` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">    `sex` tinyint(<span class="number">1</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;性别，0或1&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    `phone` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;联系电话，允许为空&#x27;</span>,</span><br><span class="line">    `address` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;地址，允许为空&#x27;</span>,</span><br><span class="line">    `borndate` datetime <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生时间&#x27;</span>,</span><br><span class="line">    `email` <span class="type">varchar</span> (<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱账号允许为空&#x27;</span>,</span><br><span class="line">    `identitycard` <span class="type">varchar</span>(<span class="number">18</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`studentno`),</span><br><span class="line">    <span class="keyword">unique</span> key `identitycard`(`identitycard`),</span><br><span class="line">    key `email` (`email`)</span><br><span class="line">)engine<span class="operator">=</span>myisam <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建年级表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `grade`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">  `gradename` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`gradeid`)</span><br><span class="line">) engine<span class="operator">=</span>innodb auto_increment <span class="operator">=</span> <span class="number">6</span> <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建科目表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `subject`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `subject`(</span><br><span class="line">`subjectno`<span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `subjectname` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;课程名称&#x27;</span>,</span><br><span class="line">    `classhour` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;学时&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`subjectno`)</span><br><span class="line">)engine <span class="operator">=</span> innodb auto_increment <span class="operator">=</span> <span class="number">19</span> <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建成绩表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `<span class="keyword">result</span>`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `<span class="keyword">result</span>`(</span><br><span class="line">`studentno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `subjectno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `examdate` datetime <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;考试日期&#x27;</span>,</span><br><span class="line">    `studentresult` <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;考试成绩&#x27;</span>,</span><br><span class="line">    key `subjectno` (`subjectno`)</span><br><span class="line">)engine <span class="operator">=</span> innodb <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入学生数据 其余自行添加 这里只添加了2行</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student` (`studentno`,`loginpwd`,`studentname`,`sex`,`gradeid`,`phone`,`address`,`borndate`,`email`,`identitycard`)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1000</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;张伟&#x27;</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="string">&#x27;13800001234&#x27;</span>,<span class="string">&#x27;北京朝阳&#x27;</span>,<span class="string">&#x27;1980-1-1&#x27;</span>,<span class="string">&#x27;text123@qq.com&#x27;</span>,<span class="string">&#x27;123456198001011234&#x27;</span>),</span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;赵强&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;13800002222&#x27;</span>,<span class="string">&#x27;广东深圳&#x27;</span>,<span class="string">&#x27;1990-1-1&#x27;</span>,<span class="string">&#x27;text111@qq.com&#x27;</span>,<span class="string">&#x27;123456199001011233&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入成绩数据  这里仅插入了一组，其余自行添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">result</span>`(`studentno`,`subjectno`,`examdate`,`studentresult`)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1000</span>,<span class="number">1</span>,<span class="string">&#x27;2013-11-11 16:00:00&#x27;</span>,<span class="number">85</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">2</span>,<span class="string">&#x27;2013-11-12 16:00:00&#x27;</span>,<span class="number">70</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">3</span>,<span class="string">&#x27;2013-11-11 09:00:00&#x27;</span>,<span class="number">68</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">4</span>,<span class="string">&#x27;2013-11-13 16:00:00&#x27;</span>,<span class="number">98</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">5</span>,<span class="string">&#x27;2013-11-14 16:00:00&#x27;</span>,<span class="number">58</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入年级数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade` (`gradeid`,`gradename`) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;大一&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;大二&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;大三&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;大四&#x27;</span>),(<span class="number">5</span>,<span class="string">&#x27;预科班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `subject`(`subjectno`,`subjectname`,`classhour`,`gradeid`)<span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;高等数学-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;高等数学-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;高等数学-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;高等数学-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;C语言-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">&#x27;C语言-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">&#x27;C语言-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">&#x27;C语言-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">9</span>,<span class="string">&#x27;Java程序设计-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;Java程序设计-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">&#x27;Java程序设计-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">&#x27;Java程序设计-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">&#x27;数据库结构-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">&#x27;数据库结构-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">15</span>,<span class="string">&#x27;数据库结构-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="string">&#x27;数据库结构-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">17</span>,<span class="string">&#x27;C#基础&#x27;</span>,<span class="number">130</span>,<span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="指定查询字段"><a href="#指定查询字段" class="headerlink" title="指定查询字段"></a>指定查询字段</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">select</span> `studentno`, `studentname` <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给结果取名字 字段或表名</span></span><br><span class="line"><span class="keyword">select</span> `studentno` <span class="keyword">as</span> <span class="string">&#x27;学号&#x27;</span>, `studentname` <span class="keyword">as</span> <span class="string">&#x27;名字&#x27;</span> <span class="keyword">from</span> student <span class="keyword">as</span> s;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数 Concat(a, b)</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;姓名：&#x27;</span>, studentname) <span class="keyword">as</span> 新名字 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h2 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125428278.png" alt="image-20220425125428278"></p><h2 id="数据库的列"><a href="#数据库的列" class="headerlink" title="数据库的列"></a>数据库的列</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125448719.png" alt="image-20220425125448719"></p><h2 id="where条件语句"><a href="#where条件语句" class="headerlink" title="where条件语句"></a>where条件语句</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125505578.png" alt="image-20220425125505578"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询成绩在95~100之间</span></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="operator">&gt;=</span> <span class="number">95</span> <span class="operator">&amp;&amp;</span> studentresult <span class="operator">&lt;=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="operator">&gt;=</span> <span class="number">95</span> <span class="keyword">and</span> studentresult <span class="operator">&lt;=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模糊查询 （区间）</span></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="keyword">between</span> <span class="number">95</span> <span class="keyword">and</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentno <span class="operator">!=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> studentno <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125551017.png" alt="image-20220425125551017"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- like %（代表0到任意个字符）_一个字符 不能用等号 like</span></span><br><span class="line"><span class="comment">-- 姓张的</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student <span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 张 名字只有一个字</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 张 名字只有两个字</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字中有三的 %三%</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;%三%&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- in</span></span><br><span class="line"><span class="comment">-- 查询 1001 1002 1003号学员</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentno <span class="keyword">in</span> (<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> address <span class="keyword">in</span> (<span class="string">&#x27;%深圳%&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--null</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> borndate <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h2 id="联表查询"><a href="#联表查询" class="headerlink" title="联表查询"></a>联表查询</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125608583.png" alt="image-20220425125608583"></p><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125623376.png" alt="image-20220425125623376"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 联表查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 分析需求，分析查询的字段来自哪些表</span></span><br><span class="line"><span class="comment">2.确定使用哪种连接查询？7种</span></span><br><span class="line"><span class="comment">确定交叉点（这两个表中哪个数据是相同的）</span></span><br><span class="line"><span class="comment">判断的条件： 学生表中 studentNo = 成绩表中 studentNo </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- join on(条件判断) 连接查询</span></span><br><span class="line"><span class="comment">-- where 等值查询</span></span><br><span class="line"><span class="comment">-- inner join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- right join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- left join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- 查询缺考的同学</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">where</span> studentresult <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125750295.png" alt="image-20220425125750295"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询父子信息</span></span><br><span class="line"><span class="keyword">select</span> a.categoryname <span class="keyword">as</span> <span class="string">&#x27;父栏目&#x27;</span>,b.categoryname <span class="keyword">as</span> <span class="string">&#x27;子栏目&#x27;</span></span><br><span class="line"><span class="keyword">from</span> category a, category b</span><br><span class="line"><span class="keyword">where</span> a.categoryid <span class="operator">=</span> b.pid</span><br></pre></td></tr></table></figure><h2 id="分页和排序"><a href="#分页和排序" class="headerlink" title="分页和排序"></a>分页和排序</h2><p>排序</p><p>–  排序 <strong>升序asc 降序 desc</strong><br>– order by 通过哪个字段排序 顺序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.studentno,studentname,subjectname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> subject sub</span><br><span class="line"><span class="keyword">on</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">where</span> sub.subjectname <span class="operator">=</span> <span class="string">&#x27;C语言-2&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> studentresult <span class="keyword">asc</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分页</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为什么要分页</span></span><br><span class="line"><span class="comment">-- 缓解数据库压力，给人的体验更好</span></span><br><span class="line"><span class="comment">-- 分页，每页显示五条数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语法： limit 当前页，页面的大小</span></span><br><span class="line"><span class="comment">-- limit 0,5 1-5</span></span><br><span class="line"><span class="comment">-- limit 1,5 1-5</span></span><br><span class="line"><span class="comment">-- limit 6,5</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`StudentNo`,`StudentName`,`SubjectName`,`StudentResult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectNo`<span class="operator">=</span>sub.`subjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectName<span class="operator">=</span><span class="string">&#x27;数据结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> StudentResult <span class="keyword">ASC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第一页 limit 0,5</span></span><br><span class="line"><span class="comment">-- 第二页 limit 5,5</span></span><br><span class="line"><span class="comment">-- 第三页 limit 10,5</span></span><br><span class="line"><span class="comment">-- 第N页 limit pagesize*（n-1）,pagesize</span></span><br><span class="line"><span class="comment">-- pagesize</span></span><br><span class="line"><span class="comment">-- [pagesize*（n-1）,pagesize]</span></span><br><span class="line"><span class="comment">-- n 当前页</span></span><br><span class="line"><span class="comment">-- 【数据总数/页面大小=总页数】</span></span><br></pre></td></tr></table></figure><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>where (这个值是计算出来的)<br>本质：在where语句中嵌套一个子查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方法二:使用子查询(执行顺序:由里及外)</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询课程为 高等数学-2 且分数不小于80分的学生的学号和姓名</span></span><br><span class="line"><span class="comment">-- 方法一:使用连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.`StudentNo` <span class="operator">=</span> r.`StudentNo`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.`SubjectNo` <span class="operator">=</span> r.`SubjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span> <span class="keyword">AND</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法二:使用连接查询+子查询</span></span><br><span class="line"><span class="comment">-- 分数不小于80分的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在上面SQL基础上,添加需求:课程为 高等数学-2</span></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法三:使用子查询</span></span><br><span class="line"><span class="comment">-- 分步写简单sql语句,然后将其嵌套起来</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno <span class="keyword">IN</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">       <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="分组和过滤"><a href="#分组和过滤" class="headerlink" title="分组和过滤"></a>分组和过滤</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询不同课程的平均分,最高分,最低分</span></span><br><span class="line"><span class="comment">-- 前提:根据不同的课程进行分组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> subjectname,<span class="built_in">AVG</span>(studentresult) <span class="keyword">AS</span> 平均分,<span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分,<span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> s.subjectno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> r.subjectno</span><br><span class="line"><span class="keyword">HAVING</span> 平均分<span class="operator">&gt;</span><span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>where写在group by前面.<br> <strong>分组后面的筛选要使用HAVING</strong><br> 因为<strong>having是从前面筛选的字段再筛选</strong>，而<strong>where是从数据表中的&gt;字段直接进行的筛选的</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425124956760.png&quot; alt=&quot;image-20</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库入门</title>
    <link href="http://example.com/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/</id>
    <published>2021-10-15T04:19:24.000Z</published>
    <updated>2022-04-25T05:17:23.288Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425123046018.png" alt="image-20220425123046018"></p><h2 id="数据库的列类型"><a href="#数据库的列类型" class="headerlink" title="数据库的列类型"></a>数据库的列类型</h2><p>数值</p><p>tinyint 十分小的数据 1个字节<br>smallint 较小的数据 2个字节<br>mediumint 中等大小 3个字节<br><strong>int 标准的整数 4个字节（常用）</strong><br>bigint 较大的数据 8个字节<br>float 浮点数 4个字节<br>double 浮点数 8个字节 （精度问题）<br>decimal 字符串形式的浮点数,金融计算的时候，一般用decimal</p><p>字符串</p><ul><li><strong>char 字符串固定大小 0-255</strong></li><li><strong>varchar 可变字符串 0-65535</strong>（常用）</li><li>tinytext 微型文本 2^8-1</li><li><strong>text 文本串 2^16-1</strong> (保存大文本)</li></ul><p>时间日期</p><ul><li><p>**date yyyy-MM-dd,日期格式</p></li><li><p><strong>time HH:mm-ss 时间格式</strong></p></li><li><p><strong>datetime YYYY-MM-DD HH:mm:ss （最常用的时间格式）</strong></p></li><li><p><strong>timestamp 时间戳 1970.1.1到现在的毫秒数 （较为常用）</strong></p></li><li><p>year 年份表示</p></li></ul><h2 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h2><table><thead><tr><th>字段</th><th>解释</th></tr></thead><tbody><tr><td>Unsigned</td><td>无符号的整数声明了该列不能声明为负数</td></tr><tr><td>zerofill</td><td>0填充10的长度 1 – 0000000001 <strong>不足位数用0 填充</strong></td></tr><tr><td>自增</td><td>通常理解为自增，自动在上一条记录的基础上+1,通常用来设计唯一的主键 index,必须是整数<br>- 类似可以自定义设置主键自增的起始值和步长</td></tr><tr><td>非空 NULL not Null</td><td>- 假设设置为 not null，如何不给他赋值，就会报错<br>- NULL 如果不填写，默认为NULL</td></tr><tr><td>is_delete</td><td>伪删除</td></tr><tr><td>gmt_creat</td><td>创建时间</td></tr><tr><td>gmt_update</td><td>修改时间</td></tr></tbody></table><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><p>–目标:创建一个schoo1数据库<br>–创建学生表(列,字段)使用SQL 创建<br>–学号int   登录密码varchar(20)   姓名,性别varchar(2)  出生日期(datatime)  家庭住址，emai1<br>–注意点使用英文()，表的名称和字段尽量使用括起来<br>– AUTO_ INCREMENT 自增<br>– COMMENT 属性注释<br>– DEFAULT 默认值<br>–字符串使用单引号括起来!<br>–所有的语句后面加，(英文的)，最后一个不用加<br>– PRIMARY KEY 主键，一般一个表只有一个唯一的主键!</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE school</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看建立数据库的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE SCHOOL</span><br><span class="line"><span class="comment">--查看创建表的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student</span><br><span class="line"><span class="comment">--显示表的结构</span></span><br><span class="line"><span class="keyword">DESC</span> STUDENT </span><br></pre></td></tr></table></figure><h2 id="MYISM和INNODB的区别"><a href="#MYISM和INNODB的区别" class="headerlink" title="MYISM和INNODB的区别"></a>MYISM和INNODB的区别</h2><p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425124403436.png" alt="image-20220425124403436"></p><p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425124445485.png" alt="image-20220425124445485"></p><h2 id="修改删除表"><a href="#修改删除表" class="headerlink" title="修改删除表"></a>修改删除表</h2><p>修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名 ALTER TABLE 旧表面 AS 新表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student RENAME <span class="keyword">AS</span> student1</span><br><span class="line"><span class="comment">-- 增加表的字段 ALTER TABLE 表名 ADD 字段名 列属性</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 <span class="keyword">ADD</span> age <span class="type">INT</span>(<span class="number">11</span>)</span><br><span class="line"><span class="comment">-- 修改表的字段（重命名，修改约束）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 MODIFY age <span class="type">VARCHAR</span>(<span class="number">11</span>)  <span class="comment">-- 修改约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 CHANGE age age1 <span class="type">INT</span>(<span class="number">1</span>)  <span class="comment">-- 字段重命名,加到后面也可修改约束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 <span class="keyword">DROP</span> age1</span><br></pre></td></tr></table></figure><p>结论: <strong>modify能修改字段类型和约束，而change不能。</strong><br>最终结论: <strong>change用来字段重命名</strong>，<strong>不能修改字段类型和约束</strong>;<br><strong>modify不用来字段重命名</strong>，只能<strong>修改字段类型和约束</strong>;</p><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `student1`</span><br></pre></td></tr></table></figure><p>注意点:<br>·&#96;字段名，使用这个包裹!<br>·注释–&#x2F;**&#x2F;<br>. sql关键字大小写不敏感，建议大家写小写<br>·所有的符号全部用</p><h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><p>方法一 创建表的时候，增加约束（麻烦，比较复杂）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">use school;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表的 gradeid 字段 要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键KEY</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置外键</span></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (gradeid)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>删除有外键关系的表的时候，必须先删除引用的表（从表），再删除被引用的表（主表）</strong></p><p>方式二： 创建表成功后添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表的 gradeid 字段 要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键KEY</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student` </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gradeid`);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALTER TABLE`表`  ADD CONSTRAINT 约束名 FOREIGN KEY（作为外键的列） 引用到哪个表的哪个字段</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>以上的操作都是物理外键，数据库级别外键，不建议使用。（避免数据库过多造成困扰）</strong></p><p>最佳实践</p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li><li>我们想使用多张表的数据，想使用外键（程序去实现）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425123046018.png&quot; alt=&quot;image-20220425123046018&quot;&gt;&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的注解开发</title>
    <link href="http://example.com/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</id>
    <published>2021-10-11T03:11:52.000Z</published>
    <updated>2022-04-25T04:11:12.496Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120059888.png" alt="image-20220425120059888"></p><h2 id="mybatis常用注解"><a href="#mybatis常用注解" class="headerlink" title="mybatis常用注解"></a>mybatis常用注解</h2><p>@Insert:实现新增@Update:实现更新Delete:实现删除<br>@Select:实现查询<br>@Result:实现结果集封装<br>@Results: 可以与@Resuit一起使用，封装多个结果集<br>@One:实现一对一结果集封装<br>@Many:实现一对多结果集封装</p><h2 id="xml完成基本的CRUD"><a href="#xml完成基本的CRUD" class="headerlink" title="xml完成基本的CRUD"></a>xml完成基本的CRUD</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120207783.png" alt="image-20220425120207783"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120215489.png" alt="image-20220425120215489"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120225344.png" alt="image-20220425120225344"></p><h2 id="一对一的注解开发"><a href="#一对一的注解开发" class="headerlink" title="一对一的注解开发"></a>一对一的注解开发</h2><p>实现复杂关系映射之前我们可以在映射文件中通过配置<resultMap>来实现，使用注解开发后，我们可以使用@Results注解，@Result注解，@One注解，@Many注解组合完成复杂关系的配置</resultMap></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120246622.png" alt="image-20220425120246622"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120322978.png" alt="image-20220425120322978"></p><p>第二种两段式查询</p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120335126.png" alt="image-20220425120335126"></p><h2 id="一对多注解开发"><a href="#一对多注解开发" class="headerlink" title="一对多注解开发"></a>一对多注解开发</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120353588.png" alt="image-20220425120353588"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120408404.png" alt="image-20220425120408404"></p><h2 id="多对多注解开发"><a href="#多对多注解开发" class="headerlink" title="多对多注解开发"></a>多对多注解开发</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120431663.png" alt="image-20220425120431663"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120502376.png" alt="image-20220425120502376"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120059888.png&quot; alt=&quot;image-20220425120059888&quot;&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的多表操作</title>
    <link href="http://example.com/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-09T03:11:27.000Z</published>
    <updated>2022-04-25T04:11:21.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115640322.png" alt="image-20220425115640322"></h2><h1 id="Myatis的多表操作"><a href="#Myatis的多表操作" class="headerlink" title="Myatis的多表操作"></a>Myatis的多表操作</h1><h2 id="一对一配置实现"><a href="#一对一配置实现" class="headerlink" title="一对一配置实现"></a>一对一配置实现</h2><p>MyBatis多表配置方式:</p><p>一对一配置:使用<resultMap>做配置<br>一对多配置:使用<resultMap> +<collection>做配置<br>多对多配置:使用<resultMap>+<collection>做配置</collection></resultMap></collection></resultMap></resultMap></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115747462.png" alt="image-20220425115747462"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115755359.png" alt="image-20220425115755359"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115803237.png" alt="image-20220425115803237"></p><p> 第二种配置方式</p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115816780.png" alt="image-20220425115816780"></p><h2 id="一对多配置实现"><a href="#一对多配置实现" class="headerlink" title="一对多配置实现"></a>一对多配置实现</h2><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115848197.png" alt="image-20220425115848197"></p><h2 id="多对多配置实现"><a href="#多对多配置实现" class="headerlink" title="多对多配置实现"></a>多对多配置实现</h2><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115923254.png" alt="image-20220425115923254"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115931051.png" alt="image-20220425115931051"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis核心配置文件</title>
    <link href="http://example.com/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</id>
    <published>2021-10-09T03:10:57.000Z</published>
    <updated>2022-04-25T04:11:29.130Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425114915216.png" alt="image-20220425114915216"></p><h1 id="mybatis核心配置文件"><a href="#mybatis核心配置文件" class="headerlink" title="mybatis核心配置文件"></a>mybatis核心配置文件</h1><h2 id="environments标签"><a href="#environments标签" class="headerlink" title="environments标签"></a>environments标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115030177.png" alt="image-20220425115030177"></p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115054032.png" alt="image-20220425115054032"></p><h2 id="mapper标签"><a href="#mapper标签" class="headerlink" title="mapper标签"></a>mapper标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115125277.png" alt="image-20220425115125277"></p><h2 id="properties标签"><a href="#properties标签" class="headerlink" title="properties标签"></a>properties标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115143954.png" alt="image-20220425115143954"></p><h2 id="typeAliases标签"><a href="#typeAliases标签" class="headerlink" title="typeAliases标签"></a>typeAliases标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115200649.png" alt="image-20220425115200649"></p><h2 id="typeHandlers标签"><a href="#typeHandlers标签" class="headerlink" title="typeHandlers标签"></a>typeHandlers标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115227687.png" alt="image-20220425115227687"></p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115236485.png" alt="image-20220425115236485"></p><p>注册</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115252294.png" alt="image-20220425115252294"></p><h2 id="plugins标签（PageHelper）"><a href="#plugins标签（PageHelper）" class="headerlink" title="plugins标签（PageHelper）"></a>plugins标签（PageHelper）</h2><p>MyBatis可以使用第三方的插件来对功能进行扩展，分页助手PageHelper是将分页的复杂操作进行封装，使用简单的方式即可获得分页的相关数据<br>开发步骤:<br>1 导入通用PageHelper的坐标</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115326945.png" alt="image-20220425115326945"></p><p>2 在mybatis核心配置文件中配置PageHelper插件</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115343765.png" alt="image-20220425115343765"></p><p>3 测试分页数据获取</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115441320.png" alt="image-20220425115441320"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425114915216.png&quot; alt=&quot;image-2022042511491</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>动态sql</title>
    <link href="http://example.com/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/</id>
    <published>2021-10-09T03:10:23.000Z</published>
    <updated>2022-04-25T04:11:40.622Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114555992.png" alt="image-20220425114555992"></p><h1 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h1><h2 id="动态sql标签"><a href="#动态sql标签" class="headerlink" title="动态sql标签"></a>动态sql标签</h2><h3 id="if标签"><a href="#if标签" class="headerlink" title="if标签"></a>if标签</h3><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114657461.png" alt="image-20220425114657461"></p><h3 id="foreach标签"><a href="#foreach标签" class="headerlink" title="foreach标签"></a>foreach标签</h3><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114711638.png" alt="image-20220425114711638"></p><h2 id="sql片段抽取"><a href="#sql片段抽取" class="headerlink" title="sql片段抽取"></a>sql片段抽取</h2><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114737370.png" alt="image-20220425114737370"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114555992.png&quot; alt=&quot;image-20220425114555992&quot;&gt;&lt;/p&gt;
&lt;h1 id=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的dao层实现</title>
    <link href="http://example.com/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-10-04T03:09:49.000Z</published>
    <updated>2022-04-25T04:11:48.799Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114357257.png" alt="image-20220425114357257"></p><h1 id="Mybatisl的Dao层实现方式"><a href="#Mybatisl的Dao层实现方式" class="headerlink" title="Mybatisl的Dao层实现方式"></a>Mybatisl的Dao层实现方式</h1><h2 id="传统实现方式"><a href="#传统实现方式" class="headerlink" title="传统实现方式"></a>传统实现方式</h2><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114000032.png" alt="image-20220425114000032"></p><p>核心配置文件</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114019042.png" alt="image-20220425114019042"></p><p>映射文件</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114041810.png" alt="image-20220425114041810"></p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114051084.png" alt="image-20220425114051084"></p><p>接口</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114116849.png" alt="image-20220425114116849"></p><p>实现</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114134198.png" alt="image-20220425114134198"></p><p>调用并且运行</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114150231.png" alt="image-20220425114150231"></p><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114231050.png" alt="image-20220425114231050"></p><p>1.代理开发方式介绍<br>采用Mybatis的代理开发方式实现DAO层的开发，这种方式是我们后面进入企业的主流。<br>Mapper接口开发方法只需要程序员编写Mapper接口(相当于Dao接口)，由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。</p><p>Maprer接口开发需要遵循以下规范:<br>1、Mapper.xml文件中的namespace与mapper接口的全限定名相同<br>2、Mapper接口方法名和Mapper.xml中定义的每个statement的id相同<br>3、Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同4、Mapper接口方法的输出参数类mapper.xml中定义的每个sql的resultType的类型相同</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114330558.png" alt="image-20220425114330558"></p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114336309.png" alt="image-20220425114336309"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114357257.png&quot; alt=&quot;image-20220425114357257&quot;&gt;&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mybatis入门操作</title>
    <link href="http://example.com/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-03T03:09:15.000Z</published>
    <updated>2022-04-25T04:12:01.294Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112943293.png" alt="image-20220425112943293"></p><h1 id="Mybatis入门操作"><a href="#Mybatis入门操作" class="headerlink" title="Mybatis入门操作"></a>Mybatis入门操作</h1><h2 id="原始jdbc操作"><a href="#原始jdbc操作" class="headerlink" title="原始jdbc操作"></a>原始jdbc操作</h2><p>原始jdbc开发存在的问题如下:<br>数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能sql语句在代码中硬编码，造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码.<br>查询操作时，需要手动将结果集中的数据手动封装到实体中。插入操作时，需要手动将实体的数据设置到sql语句的占位符位置<br>应对上述问题给出的解决方案:<br>使用数据库连接池初始化连接资源<br>将sql语句抽取到xml配置文件中<br>使用反射、内省等底层技术，自动将实体与表进行属性与字段的自动映射</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112955764.png" alt="image-20220425112955764"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113003233.png" alt="image-20220425113003233"></p><h2 id="什么是mybatis"><a href="#什么是mybatis" class="headerlink" title="什么是mybatis"></a>什么是mybatis</h2><ul><li>mybatis是一个优秀的基于java的持久层框架，<strong>它内部封装了jdbc</strong>，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</li><li>**mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行心映射生成最终执行的sql语句。</li><li><strong>最后mybatis框架执行sql并将结果映射为java对象并返回</strong>。采用ORM思想解决了实体和数据库映射的问题，对jdbc进行了封装，屏蔽了jdbc api 底层访问细节，使我们不用与jdbc api打交道，就可以完成对数据库的持久化操作。</li></ul><h2 id="MyBatis开发步骤"><a href="#MyBatis开发步骤" class="headerlink" title="MyBatis开发步骤:"></a>MyBatis开发步骤:</h2><p>1·添加MyBatis的坐标</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113252515.png" alt="image-20220425113252515"></p><p> 2.创建user数据表编写User实体类</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113316045.png" alt="image-20220425113316045"></p><p>3,编写映射文件UserMapper.xml</p><p>映射文件Mapper约束头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113354321.png" alt="image-20220425113354321"></p><p>4.编写核心文件SqlMapConfig.xml</p><p>核心配置文件约束头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">       &lt;configuration&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113422604.png" alt="image-20220425113422604"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113428599.png" alt="image-20220425113428599"></p><p>5,编写测试类</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113443757.png" alt="image-20220425113443757"></p><h2 id="mybatis的增删改查"><a href="#mybatis的增删改查" class="headerlink" title="mybatis的增删改查"></a>mybatis的增删改查<img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113515668.png" alt="image-20220425113515668"></h2><p>3.插入操作注意问题·</p><p>插入语句使用insert标签<br>·在映射文件中使用parameterType属性指定要插入的数据类型.<br> Sql语句中使用#{实体属性名方式引用实体中的属性值<br>·插入操作使用的API是sqlSession.insert(“命名空间.id”,实体对象);<br>·插入操作涉及数据库数据变化，所以要使用sqlSession对象显示的提交事务，即sqlSession.commit()</p><h2 id="mybatis相应API"><a href="#mybatis相应API" class="headerlink" title="mybatis相应API"></a>mybatis相应API</h2><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113724573.png" alt="image-20220425113724573"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113732169.png" alt="image-20220425113732169"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113746188.png" alt="image-20220425113746188"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112943293.png&quot; alt=&quot;image-20220425112943293&quot;&gt;&lt;/p&gt;
&lt;h1 id=</summary>
      
    
    
    
    
  </entry>
  
</feed>
