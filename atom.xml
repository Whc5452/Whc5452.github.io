<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WHC 的个人博客</title>
  
  <subtitle>WHC blog</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-24T18:27:18.424Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>whc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring的Ioc</title>
    <link href="http://example.com/2022/04/25/spring%E7%9A%84Ioc/"/>
    <id>http://example.com/2022/04/25/spring%E7%9A%84Ioc/</id>
    <published>2022-04-24T18:13:45.000Z</published>
    <updated>2022-04-24T18:27:18.424Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022718381.png" alt="image-20220425022718381"></p><h1 id="Spring的IOC（控制反转）"><a href="#Spring的IOC（控制反转）" class="headerlink" title="Spring的IOC（控制反转）"></a>Spring的IOC（控制反转）</h1><h2 id="spring简介"><a href="#spring简介" class="headerlink" title="spring简介"></a>spring简介</h2><h3 id="Spring是什么"><a href="#Spring是什么" class="headerlink" title="Spring是什么"></a>Spring是什么</h3><ol><li>Spring是轻量级开源框架，它是很多模块的集合 ，以loC(反转控制)和AOP(面向切面编程)为内核。</li><li>旨在提高开发人员的开发效率以及系统的可维护性</li><li>这些模块是核心容器、数据访问&#x2F;集成、Web、AOP（面向切面编程）、工具、消息和测试模块。</li><li>比如Core Container中的Core组件是Spring所有组件的核心，Beans组件和Context组件是实现IOC和DI的基础，AOP组件用来实现面向切面编程。</li></ol><h3 id="Spring的优势"><a href="#Spring的优势" class="headerlink" title="Spring的优势"></a>Spring的优势</h3><p>1)方便解耦，简化开发<br>2)AOP编程的支持<br>3)声明式事务的支持<br>4)方便程序的测试<br>5)方便集成各种优秀框架<br>6)降低JavaEE AP1的使用难度<br>7)Java源码是经典学习范例</p><h3 id="spring的开发步骤"><a href="#spring的开发步骤" class="headerlink" title="spring的开发步骤"></a>spring的开发步骤</h3><ul><li>导入 Spring开发的基本包坐标</li><li>编写Dao接口和实现类</li><li>创建Spring 核心配置文件      </li><li>在Spring 配置文件中配置UserDaolmpl</li><li>使用Spring 的API获得 Bean 实例</li></ul><p><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022024093.png" alt="image-20220425022024093"></p><h2 id="Bean"><a href="#Bean" class="headerlink" title="Bean"></a>Bean</h2><h3 id="Bean标签范围配置"><a href="#Bean标签范围配置" class="headerlink" title="Bean标签范围配置"></a>Bean标签范围配置</h3><p>用于配置对象交由Spring来创建。<br>默认情况下它调用的是类中的无参构造函数，如果没有无参构造函数则不能创建成功。<br>基本属性:</p><ul><li>id : Bean实例在Spring容器中的唯─标识</li><li>class: Bean的全限定名称</li><li><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022225407.png" alt="image-20220425022225407"></li></ul><p>当scope的取值为singleton时<br>Bean的实例化个数：1个<br>Bean的实例化时机：当Spring核心文件被加载时，实例化配置的Bean实例<br>Bean的生命周期：<br> 对象创建：当应用加载，创建容器时，对象就被创建了<br> 对象运行：只要容器在，对象一直活着<br> 对象销毁：当应用卸载，销毁容器时，对象就被销毁了<br>2）当scope的取值为prototype时<br>Bean的实例化个数：多个<br>Bean的实例化时机：当调用getBean()方法时实例化Bean<br> 对象创建：当使用对象时，创建新的对象实例<br> 对象运行：只要对象在使用中，就一直活着<br> 对象销毁：当对象长时间不用时，被 Java 的垃圾回收器回收了</p><h3 id="Bean实例化三种方式"><a href="#Bean实例化三种方式" class="headerlink" title="Bean实例化三种方式"></a>Bean实例化三种方式</h3><p><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022353002.png" alt="image-20220425022353002"></p><p><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022402296.png" alt="image-20220425022402296"></p><p><img src="/2022/04/25/spring%E7%9A%84Ioc/image-20220425022411827.png" alt="image-20220425022411827"></p><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><p>IOC（Inversion Of Controll，控制反转）是一种设计思想，就是将原本在程序中手动创建对象的控制权，交给IOC容器来管理，并由IOC容器完成对象的注入。这样可以很大程度上简化应用的开发，把应用从复杂的依赖关系中解放出来。IOC容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件&#x2F;注解即可，完全不用考虑对象是如何被创建出来的。</p><h2 id="DI-依赖注入"><a href="#DI-依赖注入" class="headerlink" title="DI 依赖注入"></a>DI 依赖注入</h2><p>依赖注入(Dependency Injection) :它是Spring框架核心IOC的具体实现。<br>在编写程序时，通过控制反转，把对象的创建交给了Spring，但是代码中不可能出现没有依赖的情况。IOC解耦只是降低他们的依赖关系，但不会消除。例如:业务层仍会调用持久层的方法。<br>那这种业务层和持久层的依赖关系，在使用Spring之后，就让Spring来维护了。<br>简单的说，就是坐等框架把持久层对象传入业务层，而不用我们自己去获取。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.service.imp1.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span> / &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2022/04/25/spring%E7%9A%84Ioc/image-20220425022718381.png&quot; alt=&quot;image-20220425022718381&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Spring的IOC（控制反转）&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://example.com/2021/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2021/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-09-27T14:59:40.000Z</published>
    <updated>2022-04-24T17:25:05.451Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p><img src="/2021/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/30465AB5B811FE11FCE1FF246E6CFBF7.png" alt="30465AB5B811FE11FCE1FF246E6CFBF7"></p><h2 id="Git工作流程图"><a href="#Git工作流程图" class="headerlink" title="Git工作流程图"></a>Git工作流程图</h2><p><img src="/2021/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/IMG_0783.PNG" alt="IMG_0783"></p><h2 id="基础操作指令"><a href="#基础操作指令" class="headerlink" title="基础操作指令"></a>基础操作指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="创建文件并提交"><a href="#创建文件并提交" class="headerlink" title="创建文件并提交"></a>创建文件并提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;commit 01&#x27;</span><br><span class="line"></span><br><span class="line">#查看日志</span><br><span class="line">git log</span><br></pre></td></tr></table></figure><h3 id="修改文件并提交"><a href="#修改文件并提交" class="headerlink" title="修改文件并提交"></a>修改文件并提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#修改文件内容</span><br><span class="line">git add .</span><br><span class="line">git commit ---m &#x27;update file01&#x27;</span><br></pre></td></tr></table></figure><h3 id="将最后一次修改还原"><a href="#将最后一次修改还原" class="headerlink" title="将最后一次修改还原"></a>将最后一次修改还原</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset commitId --hard</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><h3 id="创建并切换到dev1分支-在dev01分支提交"><a href="#创建并切换到dev1分支-在dev01分支提交" class="headerlink" title="创建并切换到dev1分支,在dev01分支提交"></a>创建并切换到dev1分支,在dev01分支提交</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#创建分支</span><br><span class="line">git branch dev01</span><br><span class="line">#切换分支</span><br><span class="line">git checkout dev01</span><br><span class="line">#提交分支</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;add file on dev&#x27;</span><br></pre></td></tr></table></figure><h3 id="切換到-master分支-将dev1合并到-master分支"><a href="#切換到-master分支-将dev1合并到-master分支" class="headerlink" title="切換到 master分支,将dev1合并到 master分支"></a>切換到 master分支,将dev1合并到 master分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git merge dev01</span><br></pre></td></tr></table></figure><h3 id="删除dev分支"><a href="#删除dev分支" class="headerlink" title="删除dev分支"></a>删除dev分支</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev01</span><br></pre></td></tr></table></figure><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="将本地仓库推送到远程仓库"><a href="#将本地仓库推送到远程仓库" class="headerlink" title="将本地仓库推送到远程仓库"></a>将本地仓库推送到远程仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@gitee.com/**/**.git</span><br><span class="line">git push --set-upstream origin master</span><br></pre></td></tr></table></figure><h3 id="将远程仓库克隆到本地"><a href="#将远程仓库克隆到本地" class="headerlink" title="将远程仓库克隆到本地"></a>将远程仓库克隆到本地</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#克隆到git_test文件夹</span><br><span class="line">git clone git@gitee.com/**/**.git git_test</span><br></pre></td></tr></table></figure><h3 id="将本地修改推送到远程仓库"><a href="#将本地修改推送到远程仓库" class="headerlink" title="将本地修改推送到远程仓库"></a>将本地修改推送到远程仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;add file03&#x27;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="将远程仓库的修改更新到本地"><a href="#将远程仓库的修改更新到本地" class="headerlink" title="将远程仓库的修改更新到本地"></a>将远程仓库的修改更新到本地</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;p&gt;&lt;img src=&quot;/2021/09/27/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/30465AB5B811FE11FCE1FF246E6CF</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>spring的注解</title>
    <link href="http://example.com/2021/09/05/spring%E7%9A%84%E6%B3%A8%E8%A7%A3/"/>
    <id>http://example.com/2021/09/05/spring%E7%9A%84%E6%B3%A8%E8%A7%A3/</id>
    <published>2021-09-04T18:00:42.000Z</published>
    <updated>2022-04-24T18:08:49.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring原始注解"><a href="#Spring原始注解" class="headerlink" title="Spring原始注解"></a>Spring原始注解</h2><p>Spring原始注解主要是替代<Bean>的配置</Bean></p><p><img src="/2021/09/05/spring%E7%9A%84%E6%B3%A8%E8%A7%A3/image-20220425020400770.png" alt="image-20220425020400770"></p><p>使用注解进行开发时，需要在applicationContext.xml中配置组件扫描，作用是指定哪个包及其子包下的Bean需要进行扫描以便识别使用注解配置的类、字段和方法。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.itheima&quot;</span>&gt;</span>&lt;/context: component-scan&gt;</span><br></pre></td></tr></table></figure><h2 id="Spring新注解"><a href="#Spring新注解" class="headerlink" title="Spring新注解"></a>Spring新注解</h2><p>使用上面的注解还不能全部替代xml配置文件，还需要使用注解替代的配置如下:</p><ul><li>非自定义的Bean的配置: &lt; bean&gt;</li><li>加载properties文件的配置: &lt; context:property-placeholder &gt;</li><li>组件扫描的配置: &lt; context:component-scan &gt;</li><li>引入其他文件: &lt; import &gt;</li></ul><p><img src="/2021/09/05/spring%E7%9A%84%E6%B3%A8%E8%A7%A3/image-20220425020812734.png" alt="image-20220425020812734"></p><h2 id="引入其他配置文件（分模块开发）"><a href="#引入其他配置文件（分模块开发）" class="headerlink" title="引入其他配置文件（分模块开发）"></a>引入其他配置文件（分模块开发）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; import resource=&quot;applicationcontext-xxx. xml&quot;/&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Spring原始注解&quot;&gt;&lt;a href=&quot;#Spring原始注解&quot; class=&quot;headerlink&quot; title=&quot;Spring原始注解&quot;&gt;&lt;/a&gt;Spring原始注解&lt;/h2&gt;&lt;p&gt;Spring原始注解主要是替代&lt;Bean&gt;的配置&lt;/Bean&gt;&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
  </entry>
  
</feed>
