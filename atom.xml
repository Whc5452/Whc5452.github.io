<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WHC 的个人博客</title>
  
  <subtitle>WHC blog</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-25T05:11:36.888Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>whc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>权限管理和备份</title>
    <link href="http://example.com/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/"/>
    <id>http://example.com/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/</id>
    <published>2021-10-17T04:21:21.000Z</published>
    <updated>2022-04-25T05:11:36.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131034090.png" alt="image-20220425131034090"></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>用户表：mysql.user</p><p>本质：对这张表进行，增删改查</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户  CREATE USER 用户名 IDENTIFIED BY &#x27;密码&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> sanjin IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改当前密码）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改密码（修改指定用户密码）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> sanjin <span class="operator">=</span> PASSWORD(<span class="string">&#x27;111111&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名  rename user 原名字 to 新名字</span></span><br><span class="line">RENAME <span class="keyword">USER</span> sanjin <span class="keyword">TO</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户授权   ALL PRIVILEGES 全部的权限   库，表</span></span><br><span class="line"><span class="comment">-- ALL PRIVILEGES 除了给别人授权，其他都能干</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> sanjin2  <span class="comment">-- 查看指定用户的权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> root<span class="variable">@localhost</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 撤销权限 REVOKE 哪些权限，在哪个库撤销，给谁撤销</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> sanjin2</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> sanjin2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h2><p>MySQL数据库备份的方式</p><ol><li><p>直接拷贝物理文件</p><p><img src="/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131121216.png" alt="image-20220425131121216"></p></li><li><p>数据库管理工具- 在想要导出的表或者库中，右键选择备份和导出</p></li><li><p>直接拷贝数据库文件和相关配置文件</p></li></ol><p><strong>mysqldump客户端</strong><br>作用 :</p><ul><li>转储数据库</li><li>搜集数据库进行备份</li><li>将数据转移到另一个SQL服务器,不一定是MySQL服务器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 导出</span><br><span class="line">1. 导出一张表 -- mysqldump -uroot -p123456 school student &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表名 &gt; 文件名(D:/a.sql)</span><br><span class="line">2. 导出多张表 -- mysqldump -uroot -p123456 school student result &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 表1 表2 表3 &gt; 文件名(D:/a.sql)</span><br><span class="line">3. 导出所有表 -- mysqldump -uroot -p123456 school &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 库名 &gt; 文件名(D:/a.sql)</span><br><span class="line">4. 导出一个库 -- mysqldump -uroot -p123456 -B school &gt;D:/a.sql</span><br><span class="line">　　mysqldump -u用户名 -p密码 -B 库名 &gt; 文件名(D:/a.sql)</span><br><span class="line"></span><br><span class="line">可以-w携带备份条件</span><br><span class="line"></span><br><span class="line">-- 导入</span><br><span class="line">1. 在登录mysql的情况下：-- source D:/a.sql</span><br><span class="line">　　source 备份文件</span><br><span class="line">2. 在不登录的情况下</span><br><span class="line">　　mysql -u用户名 -p密码 库名 &lt; 备份文件</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E5%A4%87%E4%BB%BD/image-20220425131034090.png&quot; alt=&quot;image-20220425131</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>索引</title>
    <link href="http://example.com/2021/10/17/%E7%B4%A2%E5%BC%95/"/>
    <id>http://example.com/2021/10/17/%E7%B4%A2%E5%BC%95/</id>
    <published>2021-10-17T04:20:57.000Z</published>
    <updated>2022-04-25T05:09:26.712Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130631118.png" alt="image-20220425130631118"></p><h1 id="索引的作用"><a href="#索引的作用" class="headerlink" title="索引的作用"></a>索引的作用</h1><p>定义：MySQL官方对索引的定义为:索引(Index）是帮助MySQL高效获取数据的数据结构。提取句子主干，就可以得到索引的本质:索引是数据结构。</p><p>作用：</p><ol><li>提高查询速度</li><li>确保数据的唯一性</li><li>可以加速表和表之间的连接 , 实现表与表之间的参照完整性</li><li>使用分组和排序子句进行数据检索时 , 可以显著减少分组和排序的时间</li><li>全文检索字段进行搜索优化.</li></ol><p>这些数据结构以某种方式引用(指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。</p><p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130656753.png" alt="image-20220425130656753"></p><h1 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h1><p><strong>在一个表中，主键索引只能有一个，唯一索引可以有多个</strong></p><ul><li>主键索引 （PRIMARY KEY）<br>   唯一的标识，主键不可重复，只能有一个列作为主键</li><li>唯一索引 （UNIQUE KEY）<br>  避免重复的列出现，唯一索引可以重复，多个列都可以标识唯一索引</li><li>常规索引（KEY&#x2F;INDEX）<br>  默认的，index,key关键字来设置</li><li>全文索引（FULLTEXT）<br>  在特点的数据库引擎下才有，MyISAM<br>  快速定位数据</li></ul><h1 id="索引-实际操作"><a href="#索引-实际操作" class="headerlink" title="索引-实际操作"></a>索引-实际操作</h1><h4 id="查看索引信息"><a href="#查看索引信息" class="headerlink" title="查看索引信息"></a>查看索引信息</h4><p><img src="/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130822011.png" alt="image-20220425130822011"></p><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#方法一：创建表时</span></span><br><span class="line"><span class="comment">  　　CREATE TABLE 表名 (</span></span><br><span class="line"><span class="comment">               字段名1 数据类型 [完整性约束条件…],</span></span><br><span class="line"><span class="comment">               字段名2 数据类型 [完整性约束条件…],</span></span><br><span class="line"><span class="comment">               [UNIQUE | FULLTEXT | SPATIAL ]   INDEX | KEY</span></span><br><span class="line"><span class="comment">               [索引名] (字段名[(长度)] [ASC |DESC])</span></span><br><span class="line"><span class="comment">               );</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#方法二：CREATE在已存在的表上创建索引</span></span><br><span class="line"><span class="comment">       CREATE [UNIQUE | FULLTEXT | SPATIAL ] INDEX 索引名</span></span><br><span class="line"><span class="comment">                    ON 表名 (字段名[(长度)] [ASC |DESC]) ;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#方法三：ALTER TABLE在已存在的表上创建索引</span></span><br><span class="line"><span class="comment">       ALTER TABLE 表名 ADD [UNIQUE | FULLTEXT | SPATIAL ] INDEX</span></span><br><span class="line"><span class="comment">                            索引名 (字段名[(长度)] [ASC |DESC]) ;</span></span><br><span class="line"><span class="comment">                           </span></span><br><span class="line"><span class="comment">                           </span></span><br><span class="line"><span class="comment">#删除索引：DROP INDEX 索引名 ON 表名字;</span></span><br><span class="line"><span class="comment">#删除主键索引: ALTER TABLE 表名 DROP PRIMARY KEY;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#显示索引信息: SHOW INDEX FROM student;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="增加全文索引"><a href="#增加全文索引" class="headerlink" title="增加全文索引"></a>增加全文索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*增加全文索引*/</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `school`.`student` <span class="keyword">ADD</span> FULLTEXT INDEX `studentname` (`StudentName`);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*EXPLAIN : 分析SQL语句执行性能*/</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno<span class="operator">=</span><span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用全文索引*/</span></span><br><span class="line"><span class="comment">-- 全文搜索通过 MATCH() 函数完成。</span></span><br><span class="line"><span class="comment">-- 搜索字符串作为 against() 的参数被给定。搜索以忽略字母大小写的方式执行。对于表中的每个记录行，MATCH() 返回一个相关性值。即，在搜索字符串与记录行在 MATCH() 列表中指定的列的文本之间的相似性尺度。</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname) AGAINST(<span class="string">&#x27;love&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">开始之前，先说一下全文索引的版本、存储引擎、数据类型的支持情况</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">MySQL 5.6 以前的版本，只有 MyISAM 存储引擎支持全文索引；</span></span><br><span class="line"><span class="comment">MySQL 5.6 及以后的版本，MyISAM 和 InnoDB 存储引擎均支持全文索引;</span></span><br><span class="line"><span class="comment">只有字段的数据类型为 char、varchar、text 及其系列才可以建全文索引。</span></span><br><span class="line"><span class="comment">测试或使用全文索引时，要先看一下自己的 MySQL 版本、存储引擎和数据类型是否支持全文索引。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试索引"><a href="#测试索引" class="headerlink" title="测试索引"></a>测试索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建一个uer表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user` (</span><br><span class="line">`id` <span class="type">BIGINT</span>(<span class="number">20</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`phone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`gender` TINYINT(<span class="number">4</span>) UNSIGNED <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`age` TINYINT(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">`create_time` DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">`update_time` <span class="type">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入100万数据</span></span><br><span class="line">DELIMITER $$ <span class="comment">--  写函数之前必写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--函数</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line">    <span class="keyword">RETURNS</span> <span class="type">INT</span> </span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">WHILE i<span class="operator">&lt;</span>num DO</span><br><span class="line"><span class="comment">-- 插入语句</span></span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`,`email`,`phone`,`gender`,`password`,`age`)</span><br><span class="line">    <span class="comment">--RAND()*9999999表示（0-1）*9999999=（0-9999999）</span></span><br><span class="line">    <span class="keyword">VALUE</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="string">&#x27;534240118@qq.com&#x27;</span>,<span class="built_in">FLOOR</span> (CONCAT(<span class="string">&#x27;18&#x27;</span>,RAND()<span class="operator">*</span><span class="number">9999999</span>)),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">2</span>),UUID(),<span class="built_in">FLOOR</span> (RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line">    <span class="keyword">SET</span> i <span class="operator">=</span> i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建索引</span></span><br><span class="line"><span class="comment">-- id _ 表名_字段名</span></span><br><span class="line"><span class="comment">-- create index on 字段</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX id_app_user_name <span class="keyword">ON</span> app_user(`name`); <span class="comment">-- 0.001 s</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户9999&#x27;</span>  <span class="comment">-- 查询一条记录</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E7%B4%A2%E5%BC%95/image-20220425130631118.png&quot; alt=&quot;image-20220425130631118&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;索引的作用&quot;&gt;&lt;a href=&quot;#索引的作用&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>事务</title>
    <link href="http://example.com/2021/10/17/%E4%BA%8B%E5%8A%A1/"/>
    <id>http://example.com/2021/10/17/%E4%BA%8B%E5%8A%A1/</id>
    <published>2021-10-17T04:20:32.000Z</published>
    <updated>2022-04-25T05:05:39.818Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130346030.png" alt="image-20220425130346030"></p><h1 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h1><ul><li><strong>事务就是将一组SQL语句放在同一批次内去执行</strong></li><li><strong>如果一个SQL语句出错,则该批次内的所有SQL都将被取消执行</strong></li><li><strong>MySQL事务处理只支持InnoDB和BDB数据表类型</strong></li><li>SQL执行， A给B转账 A 1000–&gt; 200 B 200<br>SQL 执行， B收到A的钱 A 800 — B 400<br>将一组SQL放在一个批次中执行</li></ul><h1 id="ACID原则"><a href="#ACID原则" class="headerlink" title="ACID原则"></a>ACID原则</h1><p>原子性（Atomicity）<br>要么都成功，要么都失败,</p><p>一致性（Consistency）<br>事务前后的数据完整性要保持一致</p><p>持久性（Durability）<br>事务没有提交，恢复到原状（宕机），事务一旦提交就不可逆转，被持久化到数据库中</p><p>隔离性（Isolation）<br>事务产生多并发时，互不干扰</p><h1 id="事物的隔离级别"><a href="#事物的隔离级别" class="headerlink" title="事物的隔离级别"></a>事物的隔离级别</h1><p><strong>脏读：</strong><br>指一个事务读取了另外一个事务未提交的数据。<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130451819.png" alt="image-20220425130451819"><br><strong>不可重复读：</strong><br>在一个事务内读取表中的某一行数据，多次读取结果不同。（这个不一定是错误，只是某些场合不对)<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130458906.png" alt="image-20220425130458906"></p><p><strong>虚读(幻读)</strong><br>一个事务范围内两个相同的查询却返回了不同数据。对应的是插入操作。  （比不可重复读多一条数据）<br>（一般是行影响，多了一行）<br><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130507594.png" alt="image-20220425130507594"></p><h1 id="执行事务"><a href="#执行事务" class="headerlink" title="执行事务"></a>执行事务</h1><p><img src="/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130518542.png" alt="image-20220425130518542"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- mysql 自动开启事务提交</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">0</span> <span class="comment">-- 关闭</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span> <span class="comment">-- 开启（默认的）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 手动处理事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">0</span> <span class="comment">-- 关闭自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">-- 标记一个事务的开始，从这个之后的SQP都在同一个事务内</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> XX</span><br><span class="line"><span class="keyword">INSERT</span> XX</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交 ： 持久化(成功)</span></span><br><span class="line"><span class="keyword">COMMIT</span> </span><br><span class="line"><span class="comment">-- 回滚：  回到原来的样子（失败）</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"><span class="comment">-- 事务结束</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">1</span> <span class="comment">-- 开启自动提交</span></span><br><span class="line"><span class="comment">-- 了解</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> 保存点名称 <span class="comment">-- 设置一个事务的保存点</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> 保存点名 <span class="comment">-- 回滚到保存点</span></span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> 保存点 <span class="comment">-- 删除保存点</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/%E4%BA%8B%E5%8A%A1/image-20220425130346030.png&quot; alt=&quot;image-20220425130346030&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;什么是事务&quot;&gt;&lt;a href=&quot;#什么是事务&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql函数</title>
    <link href="http://example.com/2021/10/17/Mysql%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2021/10/17/Mysql%E5%87%BD%E6%95%B0/</id>
    <published>2021-10-17T04:20:08.000Z</published>
    <updated>2022-04-25T05:02:47.952Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130247899.png" alt="image-20220425130247899"></p><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-8</span>) <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">9.4</span>) <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.4</span>)  <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> RAND() <span class="comment">-- 返回0-1随机数</span></span><br><span class="line"><span class="keyword">SELECT</span> SIGN(<span class="number">-10</span>) <span class="comment">-- 判断一个数的符号 0-0 负数返回-1 正数返回1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;2323232&#x27;</span>) <span class="comment">-- 返回字符串长度</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;我&#x27;</span>,<span class="string">&#x27;233&#x27;</span>) <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;java&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;cccc&#x27;</span>) <span class="comment">-- 从某个位置开始替换某个长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>) </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;坚持就能成功&#x27;</span>,<span class="string">&#x27;坚持&#x27;</span>,<span class="string">&#x27;努力&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓 周 的同学 ，改成邹</span></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(studentname,<span class="string">&#x27;周&#x27;</span>,<span class="string">&#x27;邹&#x27;</span>) <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间跟日期函数（记住）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> CURDATE() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW() <span class="comment">-- 获取当前日期</span></span><br><span class="line"><span class="keyword">SELECT</span> LOCATIME()  <span class="comment">-- 本地时间</span></span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE()  <span class="comment">-- 系统时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(NOW())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(NOW())</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 系统</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SYSTEM_USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> VERSION()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h1><p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130158947.png" alt="image-20220425130158947"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 聚合函数</span></span><br><span class="line"> <span class="comment">/*COUNT:非空的*/</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(studentname) <span class="keyword">FROM</span> student;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> student;  <span class="comment">/*推荐*/</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">-- 从含义上讲，count(1) 与 count(*) 都表示对全部数据行的查询。</span></span><br><span class="line"> <span class="comment">-- count(字段) 会统计该字段在表中出现的次数，忽略字段为null 的情况。即不统计字段为null 的记录。</span></span><br><span class="line"> <span class="comment">-- count(*) 包括了所有的列，相当于行数，在统计结果的时候，包含字段为null 的记录；</span></span><br><span class="line"> <span class="comment">-- count(1) 用1代表代码行，在统计结果的时候，包含字段为null 的记录 。</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> 很多人认为count(1)执行的效率会比count(*)高，原因是count(*)会存在全表扫描，</span></span><br><span class="line"><span class="comment"> 而count(1)可以针对一个字段进行查询。其实不然，count(1)和count(*)都会对全表进行扫描，</span></span><br><span class="line"><span class="comment"> 统计所有记录的条数，包括那些为null的记录，因此，它们的效率可以说是相差无几。而</span></span><br><span class="line"><span class="comment"> count(字段)则与前两者不同，它会统计该字段不为null的记录条数。</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 下面它们之间的一些对比：</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 1）在表没有主键时，count(1)比count(*)快</span></span><br><span class="line"><span class="comment"> 2）有主键时，主键作为计算条件，count(主键)效率最高；</span></span><br><span class="line"><span class="comment"> 3）若表格只有一个字段，则count(*)效率较高。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(StudentResult) <span class="keyword">AS</span> 总和 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(StudentResult) <span class="keyword">AS</span> 平均分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数据库级别的MD5加密"><a href="#数据库级别的MD5加密" class="headerlink" title="数据库级别的MD5加密"></a>数据库级别的MD5加密</h1><p>MD5即Message-Digest Algorithm 5（信息-摘要算法5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法之一（又译摘要算法、哈希算法），主流编程语言普遍已有MD5实现。将数据（如汉字）运算为另一固定长度值，是杂凑算法的基础原理，MD5的前身有MD2、MD3和MD4。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `testmd5` (</span><br><span class="line"> `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `pwd` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入一些数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;kuangshen&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;qinjiang&#x27;</span>,<span class="string">&#x27;456789&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果我们要对pwd这一列数据进行加密，语法是：</span></span><br><span class="line"><span class="keyword">update</span> testmd5 <span class="keyword">set</span> pwd <span class="operator">=</span> md5(pwd);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果单独对某个用户(如kuangshen)的密码加密：</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;kuangshen2&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">update</span> testmd5 <span class="keyword">set</span> pwd <span class="operator">=</span> md5(pwd) <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;kuangshen2&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入新的数据自动加密</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;kuangshen3&#x27;</span>,md5(<span class="string">&#x27;123456&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询登录用户信息（md5对比使用，查看用户输入加密后的密码进行比对）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;kuangshen&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130236581.png" alt="image-20220425130236581"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/17/Mysql%E5%87%BD%E6%95%B0/image-20220425130247899.png&quot; alt=&quot;image-20220425130247899&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;常用函数&quot;&gt;&lt;a href=&quot;#常用函</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库的增删改查</title>
    <link href="http://example.com/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
    <id>http://example.com/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</id>
    <published>2021-10-16T04:19:49.000Z</published>
    <updated>2022-04-25T04:59:25.423Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425124956760.png" alt="image-20220425124956760"></p><h1 id="DML（增删改）"><a href="#DML（增删改）" class="headerlink" title="DML（增删改）"></a>DML（增删改）</h1><h2 id="插入-insert"><a href="#插入-insert" class="headerlink" title="插入  insert"></a>插入  insert</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入语句（添加）</span></span><br><span class="line"><span class="comment">-- insert into 表名（[字段一], [字段二]）values(&#x27;值1&#x27;),(&#x27;值2&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` (`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大四&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 一般写插入语句，我们一定要数据和字段一一对应。</span></span><br><span class="line"><span class="comment">-- 插入多个字段</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span> (<span class="string">&#x27;大二&#x27;</span>),(<span class="string">&#x27;大一&#x27;</span>);</span><br><span class="line"><span class="comment">--gradeid无默认值 要插入这个数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`id`,`name`,`pwd`,`sex`,`gradeid`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;aaaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>语法：– <strong>insert into 表名（[字段一], [字段二]）values(‘值1’,‘值2’)</strong><br>注意事项：<br><strong>字段和字段之间用逗号分开</strong><br><strong>字段可以省略，但是后面的值必须一一对应</strong><br><strong>可以同时插入多条数据，VALUES后面的值需要使用，隔开即可values(‘值1’),(‘值2’)</strong></p><h2 id="修改-update"><a href="#修改-update" class="headerlink" title="修改 update"></a>修改 update</h2><p>语法；<br><strong>UPDATE 表名 set column_name &#x3D; value,[column_name &#x3D; value,…] where [条件]</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改学员名字</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;aaa&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 不指定条件的情况下，会改动所有表</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;bbb&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>条件：where 子句 运算符 id 等于 某个值，大于某个值，在某个区间内修改<br>操作符返回布尔值</p><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125042322.png" alt="image-20220425125042322"></p><p>注意：<br>column_name 是数据库的列，带上&#96;&#96;<br>条件，是筛选的条件，如果没有指定，则会修改所有的列<br>value 是一个具体的值，也可以是一个变量<br>多个设置的属性之间，使用英文逗号隔开<br>UPDATE <code>student</code> SET <code>birthday</code>&#x3D;CURRENT_TIME where <code>name</code>&#x3D;’bbb’ AND SEX &#x3D; ‘男’</p><h2 id="删除-delete"><a href="#删除-delete" class="headerlink" title="删除 delete"></a>删除 delete</h2><p>语法：<code>delete from 表名 [where 条件]</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据 (避免这样写)</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="comment">-- 删除指定</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student` <span class="keyword">where</span> id<span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>TRUNCATE:</strong><br>作用：完全清空一个数据库，表的结构和索引不会变<br>相同点： 都能删除数据，都不会删除表结构</p><p>不同：</p><ul><li>TRUNCATE 重新设置自增列 计数器会归零</li><li>TRUNCATE 不会影响事务<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 测试delete 和 truncate 区别</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test`(</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`coll` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `test`(`coll`) <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>),(<span class="string">&#x27;2&#x27;</span>),(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test` <span class="comment">-- 删除后不会影响自增</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> `test` <span class="comment">-- 自增会归零</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="DQL（查询）"><a href="#DQL（查询）" class="headerlink" title="DQL（查询）"></a>DQL（查询）</h1><h2 id="创建基础数据库（代码）"><a href="#创建基础数据库（代码）" class="headerlink" title="创建基础数据库（代码）"></a>创建基础数据库（代码）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">```<span class="keyword">sql</span></span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> `school`;</span><br><span class="line"><span class="comment">-- 创建一个school数据库</span></span><br><span class="line">use `school`;<span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `student`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `student`(</span><br><span class="line">`studentno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `loginpwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `studentname` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">    `sex` tinyint(<span class="number">1</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;性别，0或1&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    `phone` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;联系电话，允许为空&#x27;</span>,</span><br><span class="line">    `address` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;地址，允许为空&#x27;</span>,</span><br><span class="line">    `borndate` datetime <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;出生时间&#x27;</span>,</span><br><span class="line">    `email` <span class="type">varchar</span> (<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;邮箱账号允许为空&#x27;</span>,</span><br><span class="line">    `identitycard` <span class="type">varchar</span>(<span class="number">18</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`studentno`),</span><br><span class="line">    <span class="keyword">unique</span> key `identitycard`(`identitycard`),</span><br><span class="line">    key `email` (`email`)</span><br><span class="line">)engine<span class="operator">=</span>myisam <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建年级表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `grade`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">  `gradename` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`gradeid`)</span><br><span class="line">) engine<span class="operator">=</span>innodb auto_increment <span class="operator">=</span> <span class="number">6</span> <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建科目表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `subject`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `subject`(</span><br><span class="line">`subjectno`<span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment comment <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `subjectname` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;课程名称&#x27;</span>,</span><br><span class="line">    `classhour` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;学时&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`subjectno`)</span><br><span class="line">)engine <span class="operator">=</span> innodb auto_increment <span class="operator">=</span> <span class="number">19</span> <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建成绩表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> `<span class="keyword">result</span>`;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `<span class="keyword">result</span>`(</span><br><span class="line">`studentno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `subjectno` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `examdate` datetime <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;考试日期&#x27;</span>,</span><br><span class="line">    `studentresult` <span class="type">int</span> (<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;考试成绩&#x27;</span>,</span><br><span class="line">    key `subjectno` (`subjectno`)</span><br><span class="line">)engine <span class="operator">=</span> innodb <span class="keyword">default</span> charset <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入学生数据 其余自行添加 这里只添加了2行</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `student` (`studentno`,`loginpwd`,`studentname`,`sex`,`gradeid`,`phone`,`address`,`borndate`,`email`,`identitycard`)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1000</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;张伟&#x27;</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="string">&#x27;13800001234&#x27;</span>,<span class="string">&#x27;北京朝阳&#x27;</span>,<span class="string">&#x27;1980-1-1&#x27;</span>,<span class="string">&#x27;text123@qq.com&#x27;</span>,<span class="string">&#x27;123456198001011234&#x27;</span>),</span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;赵强&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;13800002222&#x27;</span>,<span class="string">&#x27;广东深圳&#x27;</span>,<span class="string">&#x27;1990-1-1&#x27;</span>,<span class="string">&#x27;text111@qq.com&#x27;</span>,<span class="string">&#x27;123456199001011233&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入成绩数据  这里仅插入了一组，其余自行添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">result</span>`(`studentno`,`subjectno`,`examdate`,`studentresult`)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1000</span>,<span class="number">1</span>,<span class="string">&#x27;2013-11-11 16:00:00&#x27;</span>,<span class="number">85</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">2</span>,<span class="string">&#x27;2013-11-12 16:00:00&#x27;</span>,<span class="number">70</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">3</span>,<span class="string">&#x27;2013-11-11 09:00:00&#x27;</span>,<span class="number">68</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">4</span>,<span class="string">&#x27;2013-11-13 16:00:00&#x27;</span>,<span class="number">98</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">5</span>,<span class="string">&#x27;2013-11-14 16:00:00&#x27;</span>,<span class="number">58</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入年级数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `grade` (`gradeid`,`gradename`) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;大一&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;大二&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;大三&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;大四&#x27;</span>),(<span class="number">5</span>,<span class="string">&#x27;预科班&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `subject`(`subjectno`,`subjectname`,`classhour`,`gradeid`)<span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;高等数学-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;高等数学-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;高等数学-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;高等数学-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;C语言-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">&#x27;C语言-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">&#x27;C语言-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">&#x27;C语言-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">9</span>,<span class="string">&#x27;Java程序设计-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;Java程序设计-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">&#x27;Java程序设计-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">&#x27;Java程序设计-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">&#x27;数据库结构-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">&#x27;数据库结构-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">15</span>,<span class="string">&#x27;数据库结构-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="string">&#x27;数据库结构-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">17</span>,<span class="string">&#x27;C#基础&#x27;</span>,<span class="number">130</span>,<span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="指定查询字段"><a href="#指定查询字段" class="headerlink" title="指定查询字段"></a>指定查询字段</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询指定字段</span></span><br><span class="line"><span class="keyword">select</span> `studentno`, `studentname` <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给结果取名字 字段或表名</span></span><br><span class="line"><span class="keyword">select</span> `studentno` <span class="keyword">as</span> <span class="string">&#x27;学号&#x27;</span>, `studentname` <span class="keyword">as</span> <span class="string">&#x27;名字&#x27;</span> <span class="keyword">from</span> student <span class="keyword">as</span> s;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 函数 Concat(a, b)</span></span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;姓名：&#x27;</span>, studentname) <span class="keyword">as</span> 新名字 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h2 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125428278.png" alt="image-20220425125428278"></p><h2 id="数据库的列"><a href="#数据库的列" class="headerlink" title="数据库的列"></a>数据库的列</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125448719.png" alt="image-20220425125448719"></p><h2 id="where条件语句"><a href="#where条件语句" class="headerlink" title="where条件语句"></a>where条件语句</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125505578.png" alt="image-20220425125505578"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询成绩在95~100之间</span></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="operator">&gt;=</span> <span class="number">95</span> <span class="operator">&amp;&amp;</span> studentresult <span class="operator">&lt;=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="operator">&gt;=</span> <span class="number">95</span> <span class="keyword">and</span> studentresult <span class="operator">&lt;=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模糊查询 （区间）</span></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentresult <span class="keyword">between</span> <span class="number">95</span> <span class="keyword">and</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> studentno <span class="operator">!=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno,studentresult <span class="keyword">from</span> <span class="keyword">result</span> </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> studentno <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125551017.png" alt="image-20220425125551017"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- like %（代表0到任意个字符）_一个字符 不能用等号 like</span></span><br><span class="line"><span class="comment">-- 姓张的</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student <span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 张 名字只有一个字</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 张 名字只有两个字</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;张__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字中有三的 %三%</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentname <span class="keyword">like</span> <span class="string">&#x27;%三%&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- in</span></span><br><span class="line"><span class="comment">-- 查询 1001 1002 1003号学员</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> studentno <span class="keyword">in</span> (<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> address <span class="keyword">in</span> (<span class="string">&#x27;%深圳%&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--null</span></span><br><span class="line"><span class="keyword">select</span> studentno, studentname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> borndate <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h2 id="联表查询"><a href="#联表查询" class="headerlink" title="联表查询"></a>联表查询</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125608583.png" alt="image-20220425125608583"></p><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125623376.png" alt="image-20220425125623376"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 联表查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 分析需求，分析查询的字段来自哪些表</span></span><br><span class="line"><span class="comment">2.确定使用哪种连接查询？7种</span></span><br><span class="line"><span class="comment">确定交叉点（这两个表中哪个数据是相同的）</span></span><br><span class="line"><span class="comment">判断的条件： 学生表中 studentNo = 成绩表中 studentNo </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- join on(条件判断) 连接查询</span></span><br><span class="line"><span class="comment">-- where 等值查询</span></span><br><span class="line"><span class="comment">-- inner join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- right join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- left join</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="comment">-- 查询缺考的同学</span></span><br><span class="line"><span class="keyword">select</span> s.studentno, studentname, subjectno, studentresult </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">where</span> studentresult <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p><img src="/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425125750295.png" alt="image-20220425125750295"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询父子信息</span></span><br><span class="line"><span class="keyword">select</span> a.categoryname <span class="keyword">as</span> <span class="string">&#x27;父栏目&#x27;</span>,b.categoryname <span class="keyword">as</span> <span class="string">&#x27;子栏目&#x27;</span></span><br><span class="line"><span class="keyword">from</span> category a, category b</span><br><span class="line"><span class="keyword">where</span> a.categoryid <span class="operator">=</span> b.pid</span><br></pre></td></tr></table></figure><h2 id="分页和排序"><a href="#分页和排序" class="headerlink" title="分页和排序"></a>分页和排序</h2><p>排序</p><p>–  排序 <strong>升序asc 降序 desc</strong><br>– order by 通过哪个字段排序 顺序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.studentno,studentname,subjectname,studentresult</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">on</span> s.studentno <span class="operator">=</span> r.studentno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> subject sub</span><br><span class="line"><span class="keyword">on</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">where</span> sub.subjectname <span class="operator">=</span> <span class="string">&#x27;C语言-2&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> studentresult <span class="keyword">asc</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分页</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为什么要分页</span></span><br><span class="line"><span class="comment">-- 缓解数据库压力，给人的体验更好</span></span><br><span class="line"><span class="comment">-- 分页，每页显示五条数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 语法： limit 当前页，页面的大小</span></span><br><span class="line"><span class="comment">-- limit 0,5 1-5</span></span><br><span class="line"><span class="comment">-- limit 1,5 1-5</span></span><br><span class="line"><span class="comment">-- limit 6,5</span></span><br><span class="line"><span class="keyword">SELECT</span> s.`StudentNo`,`StudentName`,`SubjectName`,`StudentResult`</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `<span class="keyword">result</span>` r</span><br><span class="line"><span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`subjectNo`<span class="operator">=</span>sub.`subjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectName<span class="operator">=</span><span class="string">&#x27;数据结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> StudentResult <span class="keyword">ASC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第一页 limit 0,5</span></span><br><span class="line"><span class="comment">-- 第二页 limit 5,5</span></span><br><span class="line"><span class="comment">-- 第三页 limit 10,5</span></span><br><span class="line"><span class="comment">-- 第N页 limit pagesize*（n-1）,pagesize</span></span><br><span class="line"><span class="comment">-- pagesize</span></span><br><span class="line"><span class="comment">-- [pagesize*（n-1）,pagesize]</span></span><br><span class="line"><span class="comment">-- n 当前页</span></span><br><span class="line"><span class="comment">-- 【数据总数/页面大小=总页数】</span></span><br></pre></td></tr></table></figure><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>where (这个值是计算出来的)<br>本质：在where语句中嵌套一个子查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 方法二:使用子查询(执行顺序:由里及外)</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询课程为 高等数学-2 且分数不小于80分的学生的学号和姓名</span></span><br><span class="line"><span class="comment">-- 方法一:使用连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.`StudentNo` <span class="operator">=</span> r.`StudentNo`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.`SubjectNo` <span class="operator">=</span> r.`SubjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span> <span class="keyword">AND</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法二:使用连接查询+子查询</span></span><br><span class="line"><span class="comment">-- 分数不小于80分的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在上面SQL基础上,添加需求:课程为 高等数学-2</span></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法三:使用子查询</span></span><br><span class="line"><span class="comment">-- 分步写简单sql语句,然后将其嵌套起来</span></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno <span class="keyword">IN</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">       <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="分组和过滤"><a href="#分组和过滤" class="headerlink" title="分组和过滤"></a>分组和过滤</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询不同课程的平均分,最高分,最低分</span></span><br><span class="line"><span class="comment">-- 前提:根据不同的课程进行分组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> subjectname,<span class="built_in">AVG</span>(studentresult) <span class="keyword">AS</span> 平均分,<span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分,<span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> s.subjectno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> r.subjectno</span><br><span class="line"><span class="keyword">HAVING</span> 平均分<span class="operator">&gt;</span><span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>where写在group by前面.<br> <strong>分组后面的筛选要使用HAVING</strong><br> 因为<strong>having是从前面筛选的字段再筛选</strong>，而<strong>where是从数据表中的&gt;字段直接进行的筛选的</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/image-20220425124956760.png&quot; alt=&quot;image-20</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库入门</title>
    <link href="http://example.com/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/</id>
    <published>2021-10-15T04:19:24.000Z</published>
    <updated>2022-04-25T04:47:22.558Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425123046018.png" alt="image-20220425123046018"></p><h2 id="数据库的列类型"><a href="#数据库的列类型" class="headerlink" title="数据库的列类型"></a>数据库的列类型</h2><p>数值</p><p>tinyint 十分小的数据 1个字节<br>smallint 较小的数据 2个字节<br>mediumint 中等大小 3个字节<br><strong>int 标准的整数 4个字节（常用）</strong><br>bigint 较大的数据 8个字节<br>float 浮点数 4个字节<br>double 浮点数 8个字节 （精度问题）<br>decimal 字符串形式的浮点数,金融计算的时候，一般用decimal</p><p>字符串</p><ul><li><strong>char 字符串固定大小 0-255</strong></li><li><strong>varchar 可变字符串 0-65535</strong>（常用）</li><li>tinytext 微型文本 2^8-1</li><li><strong>text 文本串 2^16-1</strong> (保存大文本)</li></ul><p>时间日期</p><ul><li><p>**date yyyy-MM-dd,日期格式</p></li><li><p><strong>time HH:mm-ss 时间格式</strong></p></li><li><p><strong>datetime YYYY-MM-DD HH:mm:ss （最常用的时间格式）</strong></p></li><li><p><strong>timestamp 时间戳 1970.1.1到现在的毫秒数 （较为常用）</strong></p></li><li><p>year 年份表示</p></li></ul><h2 id="数据库的字段属性"><a href="#数据库的字段属性" class="headerlink" title="数据库的字段属性"></a>数据库的字段属性</h2><table><thead><tr><th>Unsigned</th><th>无符号的整数声明了该列不能声明为负数</th></tr></thead><tbody><tr><td>zerofill</td><td>0填充10的长度 1 – 0000000001 <strong>不足位数用0 填充</strong></td></tr><tr><td>自增</td><td>通常理解为自增，自动在上一条记录的基础上+1,通常用来设计唯一的主键 index,必须是整数<br>- 类似可以自定义设置主键自增的起始值和步长</td></tr><tr><td>非空 NULL not Null</td><td>- 假设设置为 not null，如何不给他赋值，就会报错<br>- NULL 如果不填写，默认为NULL</td></tr><tr><td>is_delete</td><td>伪删除</td></tr><tr><td>gmt_creat</td><td>创建时间</td></tr><tr><td>#gmt_update</td><td>修改时间</td></tr></tbody></table><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><p>–目标:创建一个schoo1数据库<br>–创建学生表(列,字段)使用SQL 创建<br>–学号int   登录密码varchar(20)   姓名,性别varchar(2)  出生日期(datatime)  家庭住址，emai1<br>–注意点使用英文()，表的名称和字段尽量使用括起来<br>– AUTO_ INCREMENT 自增<br>– COMMENT 属性注释<br>– DEFAULT 默认值<br>–字符串使用单引号括起来!<br>–所有的语句后面加，(英文的)，最后一个不用加<br>– PRIMARY KEY 主键，一般一个表只有一个唯一的主键!</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE school</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看建立数据库的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE SCHOOL</span><br><span class="line"><span class="comment">--查看创建表的语句</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student</span><br><span class="line"><span class="comment">--显示表的结构</span></span><br><span class="line"><span class="keyword">DESC</span> STUDENT </span><br></pre></td></tr></table></figure><h2 id="MYISM和INNODB的区别"><a href="#MYISM和INNODB的区别" class="headerlink" title="MYISM和INNODB的区别"></a>MYISM和INNODB的区别</h2><p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425124403436.png" alt="image-20220425124403436"></p><p><img src="/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425124445485.png" alt="image-20220425124445485"></p><h2 id="修改删除表"><a href="#修改删除表" class="headerlink" title="修改删除表"></a>修改删除表</h2><p>修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改表名 ALTER TABLE 旧表面 AS 新表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student RENAME <span class="keyword">AS</span> student1</span><br><span class="line"><span class="comment">-- 增加表的字段 ALTER TABLE 表名 ADD 字段名 列属性</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 <span class="keyword">ADD</span> age <span class="type">INT</span>(<span class="number">11</span>)</span><br><span class="line"><span class="comment">-- 修改表的字段（重命名，修改约束）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 MODIFY age <span class="type">VARCHAR</span>(<span class="number">11</span>)  <span class="comment">-- 修改约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 CHANGE age age1 <span class="type">INT</span>(<span class="number">1</span>)  <span class="comment">-- 字段重命名,加到后面也可修改约束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student1 <span class="keyword">DROP</span> age1</span><br></pre></td></tr></table></figure><p>结论: <strong>modify能修改字段类型和约束，而change不能。</strong><br>最终结论: <strong>change用来字段重命名</strong>，<strong>不能修改字段类型和约束</strong>;<br><strong>modify不用来字段重命名</strong>，只能<strong>修改字段类型和约束</strong>;</p><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `student1`</span><br></pre></td></tr></table></figure><p>注意点:<br>·&#96;字段名，使用这个包裹!<br>·注释–&#x2F;**&#x2F;<br>. sql关键字大小写不敏感，建议大家写小写<br>·所有的符号全部用</p><h2 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h2><p>方法一 创建表的时候，增加约束（麻烦，比较复杂）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">use school;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表的 gradeid 字段 要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键KEY</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置外键</span></span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (gradeid)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>删除有外键关系的表的时候，必须先删除引用的表（从表），再删除被引用的表（主表）</strong></p><p>方式二： 创建表成功后添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级id&#x27;</span>,</span><br><span class="line">`gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生表的 gradeid 字段 要去引用年级表的gradeid</span></span><br><span class="line"><span class="comment">-- 定义外键KEY</span></span><br><span class="line"><span class="comment">-- 给这个外键添加约束（执行引用） references 引用</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生年级&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student` </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gradeid`);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALTER TABLE`表`  ADD CONSTRAINT 约束名 FOREIGN KEY（作为外键的列） 引用到哪个表的哪个字段</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>以上的操作都是物理外键，数据库级别外键，不建议使用。（避免数据库过多造成困扰）</strong></p><p>最佳实践</p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li><li>我们想使用多张表的数据，想使用外键（程序去实现）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/image-20220425123046018.png&quot; alt=&quot;image-20220425123046018&quot;&gt;&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的注解开发</title>
    <link href="http://example.com/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/"/>
    <id>http://example.com/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/</id>
    <published>2021-10-11T03:11:52.000Z</published>
    <updated>2022-04-25T04:11:12.496Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120059888.png" alt="image-20220425120059888"></p><h2 id="mybatis常用注解"><a href="#mybatis常用注解" class="headerlink" title="mybatis常用注解"></a>mybatis常用注解</h2><p>@Insert:实现新增@Update:实现更新Delete:实现删除<br>@Select:实现查询<br>@Result:实现结果集封装<br>@Results: 可以与@Resuit一起使用，封装多个结果集<br>@One:实现一对一结果集封装<br>@Many:实现一对多结果集封装</p><h2 id="xml完成基本的CRUD"><a href="#xml完成基本的CRUD" class="headerlink" title="xml完成基本的CRUD"></a>xml完成基本的CRUD</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120207783.png" alt="image-20220425120207783"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120215489.png" alt="image-20220425120215489"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120225344.png" alt="image-20220425120225344"></p><h2 id="一对一的注解开发"><a href="#一对一的注解开发" class="headerlink" title="一对一的注解开发"></a>一对一的注解开发</h2><p>实现复杂关系映射之前我们可以在映射文件中通过配置<resultMap>来实现，使用注解开发后，我们可以使用@Results注解，@Result注解，@One注解，@Many注解组合完成复杂关系的配置</resultMap></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120246622.png" alt="image-20220425120246622"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120322978.png" alt="image-20220425120322978"></p><p>第二种两段式查询</p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120335126.png" alt="image-20220425120335126"></p><h2 id="一对多注解开发"><a href="#一对多注解开发" class="headerlink" title="一对多注解开发"></a>一对多注解开发</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120353588.png" alt="image-20220425120353588"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120408404.png" alt="image-20220425120408404"></p><h2 id="多对多注解开发"><a href="#多对多注解开发" class="headerlink" title="多对多注解开发"></a>多对多注解开发</h2><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120431663.png" alt="image-20220425120431663"></p><p><img src="/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120502376.png" alt="image-20220425120502376"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/11/Mybatis%E7%9A%84%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91/image-20220425120059888.png&quot; alt=&quot;image-20220425120059888&quot;&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的多表操作</title>
    <link href="http://example.com/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-09T03:11:27.000Z</published>
    <updated>2022-04-25T04:11:21.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115640322.png" alt="image-20220425115640322"></h2><h1 id="Myatis的多表操作"><a href="#Myatis的多表操作" class="headerlink" title="Myatis的多表操作"></a>Myatis的多表操作</h1><h2 id="一对一配置实现"><a href="#一对一配置实现" class="headerlink" title="一对一配置实现"></a>一对一配置实现</h2><p>MyBatis多表配置方式:</p><p>一对一配置:使用<resultMap>做配置<br>一对多配置:使用<resultMap> +<collection>做配置<br>多对多配置:使用<resultMap>+<collection>做配置</collection></resultMap></collection></resultMap></resultMap></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115747462.png" alt="image-20220425115747462"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115755359.png" alt="image-20220425115755359"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115803237.png" alt="image-20220425115803237"></p><p> 第二种配置方式</p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115816780.png" alt="image-20220425115816780"></p><h2 id="一对多配置实现"><a href="#一对多配置实现" class="headerlink" title="一对多配置实现"></a>一对多配置实现</h2><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115848197.png" alt="image-20220425115848197"></p><h2 id="多对多配置实现"><a href="#多对多配置实现" class="headerlink" title="多对多配置实现"></a>多对多配置实现</h2><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115923254.png" alt="image-20220425115923254"></p><p><img src="/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115931051.png" alt="image-20220425115931051"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E7%9A%84%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/image-20220425115</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis核心配置文件</title>
    <link href="http://example.com/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</id>
    <published>2021-10-09T03:10:57.000Z</published>
    <updated>2022-04-25T04:11:29.130Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425114915216.png" alt="image-20220425114915216"></p><h1 id="mybatis核心配置文件"><a href="#mybatis核心配置文件" class="headerlink" title="mybatis核心配置文件"></a>mybatis核心配置文件</h1><h2 id="environments标签"><a href="#environments标签" class="headerlink" title="environments标签"></a>environments标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115030177.png" alt="image-20220425115030177"></p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115054032.png" alt="image-20220425115054032"></p><h2 id="mapper标签"><a href="#mapper标签" class="headerlink" title="mapper标签"></a>mapper标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115125277.png" alt="image-20220425115125277"></p><h2 id="properties标签"><a href="#properties标签" class="headerlink" title="properties标签"></a>properties标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115143954.png" alt="image-20220425115143954"></p><h2 id="typeAliases标签"><a href="#typeAliases标签" class="headerlink" title="typeAliases标签"></a>typeAliases标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115200649.png" alt="image-20220425115200649"></p><h2 id="typeHandlers标签"><a href="#typeHandlers标签" class="headerlink" title="typeHandlers标签"></a>typeHandlers标签</h2><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115227687.png" alt="image-20220425115227687"></p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115236485.png" alt="image-20220425115236485"></p><p>注册</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115252294.png" alt="image-20220425115252294"></p><h2 id="plugins标签（PageHelper）"><a href="#plugins标签（PageHelper）" class="headerlink" title="plugins标签（PageHelper）"></a>plugins标签（PageHelper）</h2><p>MyBatis可以使用第三方的插件来对功能进行扩展，分页助手PageHelper是将分页的复杂操作进行封装，使用简单的方式即可获得分页的相关数据<br>开发步骤:<br>1 导入通用PageHelper的坐标</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115326945.png" alt="image-20220425115326945"></p><p>2 在mybatis核心配置文件中配置PageHelper插件</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115343765.png" alt="image-20220425115343765"></p><p>3 测试分页数据获取</p><p><img src="/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425115441320.png" alt="image-20220425115441320"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/image-20220425114915216.png&quot; alt=&quot;image-2022042511491</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>动态sql</title>
    <link href="http://example.com/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/</id>
    <published>2021-10-09T03:10:23.000Z</published>
    <updated>2022-04-25T04:11:40.622Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114555992.png" alt="image-20220425114555992"></p><h1 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h1><h2 id="动态sql标签"><a href="#动态sql标签" class="headerlink" title="动态sql标签"></a>动态sql标签</h2><h3 id="if标签"><a href="#if标签" class="headerlink" title="if标签"></a>if标签</h3><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114657461.png" alt="image-20220425114657461"></p><h3 id="foreach标签"><a href="#foreach标签" class="headerlink" title="foreach标签"></a>foreach标签</h3><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114711638.png" alt="image-20220425114711638"></p><h2 id="sql片段抽取"><a href="#sql片段抽取" class="headerlink" title="sql片段抽取"></a>sql片段抽取</h2><p><img src="/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114737370.png" alt="image-20220425114737370"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/09/Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6/image-20220425114555992.png&quot; alt=&quot;image-20220425114555992&quot;&gt;&lt;/p&gt;
&lt;h1 id=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis的dao层实现</title>
    <link href="http://example.com/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-10-04T03:09:49.000Z</published>
    <updated>2022-04-25T04:11:48.799Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114357257.png" alt="image-20220425114357257"></p><h1 id="Mybatisl的Dao层实现方式"><a href="#Mybatisl的Dao层实现方式" class="headerlink" title="Mybatisl的Dao层实现方式"></a>Mybatisl的Dao层实现方式</h1><h2 id="传统实现方式"><a href="#传统实现方式" class="headerlink" title="传统实现方式"></a>传统实现方式</h2><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114000032.png" alt="image-20220425114000032"></p><p>核心配置文件</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114019042.png" alt="image-20220425114019042"></p><p>映射文件</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114041810.png" alt="image-20220425114041810"></p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114051084.png" alt="image-20220425114051084"></p><p>接口</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114116849.png" alt="image-20220425114116849"></p><p>实现</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114134198.png" alt="image-20220425114134198"></p><p>调用并且运行</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114150231.png" alt="image-20220425114150231"></p><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114231050.png" alt="image-20220425114231050"></p><p>1.代理开发方式介绍<br>采用Mybatis的代理开发方式实现DAO层的开发，这种方式是我们后面进入企业的主流。<br>Mapper接口开发方法只需要程序员编写Mapper接口(相当于Dao接口)，由Mybatis框架根据接口定义创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。</p><p>Maprer接口开发需要遵循以下规范:<br>1、Mapper.xml文件中的namespace与mapper接口的全限定名相同<br>2、Mapper接口方法名和Mapper.xml中定义的每个statement的id相同<br>3、Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型相同4、Mapper接口方法的输出参数类mapper.xml中定义的每个sql的resultType的类型相同</p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114330558.png" alt="image-20220425114330558"></p><p><img src="/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114336309.png" alt="image-20220425114336309"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/04/Mybatis%E7%9A%84dao%E5%B1%82%E5%AE%9E%E7%8E%B0/image-20220425114357257.png&quot; alt=&quot;image-20220425114357257&quot;&gt;&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mybatis入门操作</title>
    <link href="http://example.com/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-03T03:09:15.000Z</published>
    <updated>2022-04-25T04:12:01.294Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112943293.png" alt="image-20220425112943293"></p><h1 id="Mybatis入门操作"><a href="#Mybatis入门操作" class="headerlink" title="Mybatis入门操作"></a>Mybatis入门操作</h1><h2 id="原始jdbc操作"><a href="#原始jdbc操作" class="headerlink" title="原始jdbc操作"></a>原始jdbc操作</h2><p>原始jdbc开发存在的问题如下:<br>数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能sql语句在代码中硬编码，造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码.<br>查询操作时，需要手动将结果集中的数据手动封装到实体中。插入操作时，需要手动将实体的数据设置到sql语句的占位符位置<br>应对上述问题给出的解决方案:<br>使用数据库连接池初始化连接资源<br>将sql语句抽取到xml配置文件中<br>使用反射、内省等底层技术，自动将实体与表进行属性与字段的自动映射</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112955764.png" alt="image-20220425112955764"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113003233.png" alt="image-20220425113003233"></p><h2 id="什么是mybatis"><a href="#什么是mybatis" class="headerlink" title="什么是mybatis"></a>什么是mybatis</h2><ul><li>mybatis是一个优秀的基于java的持久层框架，<strong>它内部封装了jdbc</strong>，使开发者只需要关注sql语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</li><li>**mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行心映射生成最终执行的sql语句。</li><li><strong>最后mybatis框架执行sql并将结果映射为java对象并返回</strong>。采用ORM思想解决了实体和数据库映射的问题，对jdbc进行了封装，屏蔽了jdbc api 底层访问细节，使我们不用与jdbc api打交道，就可以完成对数据库的持久化操作。</li></ul><h2 id="MyBatis开发步骤"><a href="#MyBatis开发步骤" class="headerlink" title="MyBatis开发步骤:"></a>MyBatis开发步骤:</h2><p>1·添加MyBatis的坐标</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113252515.png" alt="image-20220425113252515"></p><p> 2.创建user数据表编写User实体类</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113316045.png" alt="image-20220425113316045"></p><p>3,编写映射文件UserMapper.xml</p><p>映射文件Mapper约束头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113354321.png" alt="image-20220425113354321"></p><p>4.编写核心文件SqlMapConfig.xml</p><p>核心配置文件约束头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line">       &lt;configuration&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113422604.png" alt="image-20220425113422604"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113428599.png" alt="image-20220425113428599"></p><p>5,编写测试类</p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113443757.png" alt="image-20220425113443757"></p><h2 id="mybatis的增删改查"><a href="#mybatis的增删改查" class="headerlink" title="mybatis的增删改查"></a>mybatis的增删改查<img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113515668.png" alt="image-20220425113515668"></h2><p>3.插入操作注意问题·</p><p>插入语句使用insert标签<br>·在映射文件中使用parameterType属性指定要插入的数据类型.<br> Sql语句中使用#{实体属性名方式引用实体中的属性值<br>·插入操作使用的API是sqlSession.insert(“命名空间.id”,实体对象);<br>·插入操作涉及数据库数据变化，所以要使用sqlSession对象显示的提交事务，即sqlSession.commit()</p><h2 id="mybatis相应API"><a href="#mybatis相应API" class="headerlink" title="mybatis相应API"></a>mybatis相应API</h2><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113724573.png" alt="image-20220425113724573"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113732169.png" alt="image-20220425113732169"></p><p><img src="/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425113746188.png" alt="image-20220425113746188"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/03/mybatis%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/image-20220425112943293.png&quot; alt=&quot;image-20220425112943293&quot;&gt;&lt;/p&gt;
&lt;h1 id=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>声明式事物控制</title>
    <link href="http://example.com/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/</id>
    <published>2021-09-27T01:43:13.000Z</published>
    <updated>2022-04-25T03:03:05.244Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105629079.png" alt="image-20220425105629079"></p><h1 id="声明式事务控制"><a href="#声明式事务控制" class="headerlink" title="声明式事务控制"></a>声明式事务控制</h1><h2 id="编程式事物控制相关对象"><a href="#编程式事物控制相关对象" class="headerlink" title="编程式事物控制相关对象"></a>编程式事物控制相关对象</h2><h3 id="platformTransactionManager"><a href="#platformTransactionManager" class="headerlink" title="platformTransactionManager"></a>platformTransactionManager</h3><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105710392.png" alt="image-20220425105710392"></p><h3 id="TransactionStatus"><a href="#TransactionStatus" class="headerlink" title="TransactionStatus"></a>TransactionStatus</h3><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105759864.png" alt="image-20220425105759864"></p><h3 id="事物隔离级别"><a href="#事物隔离级别" class="headerlink" title="事物隔离级别"></a>事物隔离级别</h3><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105811066.png" alt="image-20220425105811066"></p><h3 id="事物传播行为"><a href="#事物传播行为" class="headerlink" title="事物传播行为"></a>事物传播行为</h3><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105843809.png" alt="image-20220425105843809"></p><h2 id="xml的声明式事物控制"><a href="#xml的声明式事物控制" class="headerlink" title="xml的声明式事物控制"></a>xml的声明式事物控制</h2><h3 id="声明式事物控制简介"><a href="#声明式事物控制简介" class="headerlink" title="声明式事物控制简介"></a>声明式事物控制简介</h3><p>Spring的声明式事务顾名思义就是采用声明的方式来处理事务。这里所说的声明，就是指在配置文件中声明，用在Spring配置文件中声式的处理事务来代替代码式的处理事务。</p><p>声明式事务处理的作用:<br>事务管理不侵入开发的组件。具体来说，业务逻辑对象就不会意识到正在事务管理之中，事实上也应该如此，因为事务管理是属于系统层面的服务，而不是业务逻辑的一部分，如果想要改变事务管理策划的话，也只需要在定义文件中重新配置即可在不需要事务管理的时候，只要在设定文件上修改一下，即可移去事务管理服务，无需改变代码重新编译，这样维护起来极其方便<br>注意: Spring声明式事务控制底层就是AOP。</p><h3 id="xml声明式事物控制快速入门"><a href="#xml声明式事物控制快速入门" class="headerlink" title="xml声明式事物控制快速入门"></a>xml声明式事物控制快速入门</h3><p>命名空间</p><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425110016252.png" alt="image-20220425110016252"></p><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425110025714.png" alt="image-20220425110025714"></p><h3 id="切点方法的事物参数配置"><a href="#切点方法的事物参数配置" class="headerlink" title="切点方法的事物参数配置"></a>切点方法的事物参数配置</h3><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425110116562.png" alt="image-20220425110116562"></p><h2 id="注解的声明式事物控制"><a href="#注解的声明式事物控制" class="headerlink" title="注解的声明式事物控制"></a>注解的声明式事物控制</h2><p><img src="/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425110137364.png" alt="image-20220425110137364"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/27/%E5%A3%B0%E6%98%8E%E5%BC%8F%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/image-20220425105629079.png&quot; alt=&quot;image-20220425105</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>springmvc异常处理机制</title>
    <link href="http://example.com/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/"/>
    <id>http://example.com/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/</id>
    <published>2021-09-25T01:42:04.000Z</published>
    <updated>2022-04-25T04:12:30.363Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425103948702.png" alt="image-20220425103948702"></p><h1 id="Springmvc异常处理机制"><a href="#Springmvc异常处理机制" class="headerlink" title="Springmvc异常处理机制"></a>Springmvc异常处理机制</h1><h2 id="异常处理思路"><a href="#异常处理思路" class="headerlink" title="异常处理思路"></a>异常处理思路</h2><p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425104053904.png" alt="image-20220425104053904"></p><h2 id="异常处理的两种方式"><a href="#异常处理的两种方式" class="headerlink" title="异常处理的两种方式"></a>异常处理的两种方式</h2><ul><li>使用Spring MVC提供的简单异常处理器SimpleMappingExceptionResolver实现Spring的异常处理接口</li><li>HandlerExceptionResolver自定义自己的异常处理器</li></ul><h3 id="简单处理映射器"><a href="#简单处理映射器" class="headerlink" title="简单处理映射器"></a>简单处理映射器</h3><p>SpringMVC已经定义好了该类型转换器，在使用时可以根据项目情况进行相应异常与视图的映射配置</p><p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425104139436.png" alt="image-20220425104139436"></p><h3 id="自定义异常处理"><a href="#自定义异常处理" class="headerlink" title="自定义异常处理"></a>自定义异常处理</h3><p>1.创建异常处理器类实现HandlerExceptionResolver<br>2.配置异常处理器<br>3.编写异常页面<br>4.测试异常跳转</p><p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425104253008.png" alt="image-20220425104253008"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.itheima.resolver.MyExceptionReso1ver&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425104351776.png" alt="image-20220425104351776"></p><p><img src="/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425104358014.png" alt="image-20220425104358014"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/25/springmvc%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20220425103948702.png&quot; alt=&quot;image-20220425103</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>springmvc拦截器</title>
    <link href="http://example.com/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://example.com/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2021-09-25T01:41:41.000Z</published>
    <updated>2022-04-25T03:05:09.383Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/image-20220425103747233.png" alt="image-20220425103747233"></p><h1 id="spring-MVC拦截器"><a href="#spring-MVC拦截器" class="headerlink" title="spring MVC拦截器"></a>spring MVC拦截器</h1><h2 id="拦截器的作用"><a href="#拦截器的作用" class="headerlink" title="拦截器的作用"></a>拦截器的作用</h2><p>Spring MVC的拦截器类似于Servlet开发中的过滤器Filter，用于对处理器进行预处理和后处理<br>将拦截器按一定的顺序联结成一条链，这条链称为拦截器链(Interceptor Chain)。在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。拦截器也是AOP思想的具体实现。</p><h2 id="拦截器和过滤器的区别"><a href="#拦截器和过滤器的区别" class="headerlink" title="拦截器和过滤器的区别"></a>拦截器和过滤器的区别</h2><p><img src="/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/image-20220425103306852.png" alt="image-20220425103306852"></p><h2 id="拦截器配置"><a href="#拦截器配置" class="headerlink" title="拦截器配置"></a>拦截器配置</h2><p><img src="/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/image-20220425103404533.png" alt="image-20220425103404533"></p><h2 id="拦截器方法说明"><a href="#拦截器方法说明" class="headerlink" title="拦截器方法说明"></a>拦截器方法说明</h2><p><img src="/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/image-20220425103414896.png" alt="image-20220425103414896"></p><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/25/springmvc%E6%8B%A6%E6%88%AA%E5%99%A8/image-20220425103747233.png&quot; alt=&quot;image-20220425103747233&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;spring</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jdbctemplate</title>
    <link href="http://example.com/2021/09/25/Jdbctemplate/"/>
    <id>http://example.com/2021/09/25/Jdbctemplate/</id>
    <published>2021-09-25T01:41:20.000Z</published>
    <updated>2022-04-25T03:04:44.892Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/25/Jdbctemplate/image-20220425103844655.png" alt="image-20220425103844655"></p><h1 id="JdbcTemplate"><a href="#JdbcTemplate" class="headerlink" title="JdbcTemplate"></a>JdbcTemplate</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>它是spring框架中提供的一个对象，是对原始繁琐的JdbcAPI对象的简单封装。spring框架为我们提供了很多的操作模板类。例如:操作关系型数据的JdbcTemplate和4tbernateTemplate，操作nosql数据库的RedisTemplate，操作消息队列的JmsTemplate等等。</p><h2 id="快速入门开发代码实现"><a href="#快速入门开发代码实现" class="headerlink" title="快速入门开发代码实现"></a>快速入门开发代码实现</h2><p>1.导入相关坐标</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425102814998.png" alt="image-20220425102814998"></p><p>2、编写数据库以及实体</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425102824506.png" alt="image-20220425102824506"></p><p>3.创建数据源和jdbctemplate对象</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425102831650.png" alt="image-20220425102831650"></p><h2 id="spring产生jdbctemplate对象"><a href="#spring产生jdbctemplate对象" class="headerlink" title="spring产生jdbctemplate对象"></a>spring产生jdbctemplate对象</h2><p>我们可以将JdbcTemplate的创建权交给Spring，将数据源DataSource的创建权也交给Spring，在Spring容器内部将数据源DataSource注入到JdbcTemplate模版对象中，配置如下:</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425102909916.png" alt="image-20220425102909916"></p><p>抽取jdbcproperties文件</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425102923906.png" alt="image-20220425102923906"></p><h2 id="jdbc常用操作"><a href="#jdbc常用操作" class="headerlink" title="jdbc常用操作"></a>jdbc常用操作</h2><p>测试环境依赖</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425103025501.png" alt="image-20220425103025501"></p><p>测试环境中执行更新操作</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425103041817.png" alt="image-20220425103041817"></p><p>查询分析</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425103055452.png" alt="image-20220425103055452"></p><p>查询</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425103108952.png" alt="image-20220425103108952"></p><p>简单的数据查询</p><p><img src="/2021/09/25/Jdbctemplate/image-20220425103122344.png" alt="image-20220425103122344"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/25/Jdbctemplate/image-20220425103844655.png&quot; alt=&quot;image-20220425103844655&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;JdbcTemplate&quot;&gt;&lt;a href=&quot;#JdbcTe</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>面向切面编程AOP</title>
    <link href="http://example.com/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/"/>
    <id>http://example.com/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</id>
    <published>2021-09-16T01:42:29.000Z</published>
    <updated>2022-04-25T03:03:49.771Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104443478.png" alt="image-20220425104443478"></p><h1 id="面向切面编程AOP"><a href="#面向切面编程AOP" class="headerlink" title="面向切面编程AOP"></a>面向切面编程AOP</h1><h2 id="aop简介"><a href="#aop简介" class="headerlink" title="aop简介"></a>aop简介</h2><h3 id="什么是aop"><a href="#什么是aop" class="headerlink" title="什么是aop"></a>什么是aop</h3><p>AOP能够将那些与业务无关，却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来</p><ul><li>作用：在程序运行期间，在不修改源码的情况下对方法进行功能增强</li><li>优势：减少重复代码，提高开发效率，并且便于维护</li><li><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104555651.png" alt="image-20220425104555651"></li></ul><h3 id="aop的术语"><a href="#aop的术语" class="headerlink" title="aop的术语"></a>aop的术语</h3><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104624678.png" alt="image-20220425104624678"></p><h3 id="AOP-有哪些应用场景？"><a href="#AOP-有哪些应用场景？" class="headerlink" title="AOP 有哪些应用场景？"></a>AOP 有哪些应用场景？</h3><ul><li>记录日志(调用方法后记录日志)</li><li>监控性能(统计方法运行时间)</li><li>权限控制(调用方法前校验是否有权限)</li><li>事务管理(调用方法前开启事务，调用方法后提交关闭事务 )</li><li>缓存优化(第一次调用查询数据库，将查询结果放入内存对象， 第二次调用，直接从内存对象返回，不需要查询数据库 )</li></ul><h3 id="aop的底层实现（两种方式）"><a href="#aop的底层实现（两种方式）" class="headerlink" title="aop的底层实现（两种方式）"></a>aop的底层实现（两种方式）</h3><p>实现 AOP 的技术，主要分为两大类：</p><ul><li><strong>静态代理</strong> - 指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；<ul><li>编译时编织（特殊编译器实现）</li><li>类加载时编织（特殊的类加载器实现）。</li></ul></li><li><strong>动态代理</strong> - 在运行时在内存中“临时”生成 AOP 动态代理类，在运行时，代理对象方法执行时进行增强功能的介入，在去调用目标对象的方法，从而完成功能的增强。</li></ul><h4 id="基于jdk的动态代理"><a href="#基于jdk的动态代理" class="headerlink" title="基于jdk的动态代理"></a>基于jdk的动态代理</h4><ul><li>JDK Proxy 是 Java 语言自带的功能，无需通过加载第三方类实现；</li><li>Java 对 JDK Proxy 提供了稳定的支持，并且会持续的升级和更新，Java 8 版本中的 JDK Proxy 性能相比于之前版本提升了很多；</li><li>JDK Proxy 是通过拦截器加反射的方式实现的；</li><li>JDK Proxy 只能代理实现接口的类；</li><li>JDK Proxy 实现和调用起来比较简单；</li></ul><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104811974.png" alt="image-20220425104811974"></p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104829342.png" alt="image-20220425104829342"></p><h4 id="基于cglib的动态代理"><a href="#基于cglib的动态代理" class="headerlink" title="基于cglib的动态代理"></a>基于cglib的动态代理</h4><p>JDK 动态代理机制只能代理实现接口的类，一般没有实现接口的类不能进行代理。使用 CGLib 实现动态代理，完全不受代理类必须实现接口的限制。<br>CGLib 的原理是对指定目标类生成一个子类，并覆盖其中方法实现增强，但因为采用的是继承，所以不能对 final 修饰的类进行代理。</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104909485.png" alt="image-20220425104909485"></p><p>CGLib 的调用流程就是通过调用拦截器的 intercept 方法来实现对被代理类的调用。而拦截逻辑可以写在 intercept 方法的 invokeSuper(o, objects);的前后实现拦截。</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104927884.png" alt="image-20220425104927884"></p><h2 id="xml方式实现aop"><a href="#xml方式实现aop" class="headerlink" title="xml方式实现aop"></a>xml方式实现aop</h2><h3 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h3><p>1、导入AOP相关坐标</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105100536.png" alt="image-20220425105100536"></p><p>2、创建目标接口和目标类（内部有切点）</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105107404.png" alt="image-20220425105107404"></p><p>3、创建切面类（内部有增强方法）</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105115021.png" alt="image-20220425105115021"></p><p>4。将目标类和切面类的对象创建权交给spring</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105127591.png" alt="image-20220425105127591"></p><p>5、在applicationContext.xml中配置织入关系</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105143507.png" alt="image-20220425105143507"></p><p>6、测试代码</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105151980.png" alt="image-20220425105151980"></p><h3 id="切点表达式"><a href="#切点表达式" class="headerlink" title="切点表达式"></a>切点表达式</h3><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105221181.png" alt="image-20220425105221181"></p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105229706.png" alt="image-20220425105229706"></p><h3 id="通知的类型"><a href="#通知的类型" class="headerlink" title="通知的类型"></a>通知的类型</h3><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105258105.png" alt="image-20220425105258105"></p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105310603.png" alt="image-20220425105310603"></p><h2 id="注解方式实现aop"><a href="#注解方式实现aop" class="headerlink" title="注解方式实现aop"></a>注解方式实现aop</h2><h3 id="AOP的开发步骤"><a href="#AOP的开发步骤" class="headerlink" title="AOP的开发步骤"></a>AOP的开发步骤</h3><p>基于注解的aop开发步骤：<br>①创建目标接口和目标类（内部有切点）+②创建切面类（内部有增强方法）</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105348441.png" alt="image-20220425105348441"></p><p>③将目标类和切面类的对象创建权交给spring</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105400919.png" alt="image-20220425105400919"></p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105408751.png" alt="image-20220425105408751"></p><p>④在切面类中使用注解配置织入关系</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105430532.png" alt="image-20220425105430532"></p><p>⑤在配置文件中开启组件扫描和AOP的自动代理</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105444045.png" alt="image-20220425105444045"></p><p>⑥测试</p><p><img src="/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425105459028.png" alt="image-20220425105459028"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/16/%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/image-20220425104443478.png&quot; alt=&quot;image-20220425104443478&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>springmvc的数据请求</title>
    <link href="http://example.com/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/"/>
    <id>http://example.com/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/</id>
    <published>2021-09-14T18:54:39.000Z</published>
    <updated>2022-04-24T19:33:44.027Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425031516981.png" alt="image-20220425031516981"></p><h1 id="springmvc的数据请求（往后传）"><a href="#springmvc的数据请求（往后传）" class="headerlink" title="springmvc的数据请求（往后传）"></a>springmvc的数据请求（往后传）</h1><h2 id="获得请求参数"><a href="#获得请求参数" class="headerlink" title="获得请求参数"></a>获得请求参数</h2><h3 id="请求参数的类型"><a href="#请求参数的类型" class="headerlink" title="请求参数的类型"></a>请求参数的类型</h3><h4 id="获得基本类型参数"><a href="#获得基本类型参数" class="headerlink" title="获得基本类型参数"></a>获得基本类型参数</h4><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425031917682.png" alt="image-20220425031917682"></p><h4 id="获得pojo类型参数"><a href="#获得pojo类型参数" class="headerlink" title="获得pojo类型参数"></a>获得pojo类型参数</h4><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032002413.png" alt="image-20220425032002413"></p><h4 id="获得数组类型参数"><a href="#获得数组类型参数" class="headerlink" title="获得数组类型参数"></a>获得数组类型参数</h4><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032108549.png" alt="image-20220425032108549"></p><h4 id="获得集合类型参数"><a href="#获得集合类型参数" class="headerlink" title="获得集合类型参数"></a>获得集合类型参数</h4><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032213000.png" alt="image-20220425032213000"></p><h3 id="参数绑定注解-RequestParam"><a href="#参数绑定注解-RequestParam" class="headerlink" title="参数绑定注解@RequestParam"></a>参数绑定注解@RequestParam</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032311511.png" alt="image-20220425032311511"></p><h3 id="restful风格"><a href="#restful风格" class="headerlink" title="restful风格"></a>restful风格</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032329209.png" alt="image-20220425032329209"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032336310.png" alt="image-20220425032336310"></p><h3 id="获得servlet相关api"><a href="#获得servlet相关api" class="headerlink" title="获得servlet相关api"></a>获得servlet相关api</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032346648.png" alt="image-20220425032346648"></p><h3 id="获得请求头信息"><a href="#获得请求头信息" class="headerlink" title="获得请求头信息"></a>获得请求头信息</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032401411.png" alt="image-20220425032401411"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032410310.png" alt="image-20220425032410310"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032417431.png" alt="image-20220425032417431"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032424474.png" alt="image-20220425032424474"></p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><h4 id="静态资源的开启"><a href="#静态资源的开启" class="headerlink" title="静态资源的开启"></a>静态资源的开启</h4><p>因为是前端控制器找资源（找方法的路径），无法找到静态资源</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032510998.png" alt="image-20220425032510998"></p><p>方法二：<br>当前端控制器找不到，让原始容器tomcat去找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mvc: default-servlet-handler/&gt;</span><br></pre></td></tr></table></figure><h4 id="配置全局乱码过滤器"><a href="#配置全局乱码过滤器" class="headerlink" title="配置全局乱码过滤器"></a>配置全局乱码过滤器</h4><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032624911.png" alt="image-20220425032624911"></p><h4 id="自定义类型转换器"><a href="#自定义类型转换器" class="headerlink" title="自定义类型转换器"></a>自定义类型转换器</h4><p>SpringMVC默认已经提供了一些常用的类型转换器，例如客户端提交的字符串转换成int型进行参数设置。但是不是所有的数据类型都提供了转换器，没有提供的就需要自定义转换器，例如:日期类型的数据就需要自定义转换器。</p><p>自定义类型转换器的开发步骤:<br>1.定义转换器类实现Converter接口）<br>2.在配置文件中声明转换器<br>3.在<annotation-driven>中引用转换器</annotation-driven></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032756509.png" alt="image-20220425032756509"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032807758.png" alt="image-20220425032807758"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032824070.png" alt="image-20220425032824070"></p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="文件上传原理"><a href="#文件上传原理" class="headerlink" title="文件上传原理"></a>文件上传原理</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032834163.png" alt="image-20220425032834163"></p><h3 id="单文件上传"><a href="#单文件上传" class="headerlink" title="单文件上传"></a>单文件上传</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032856331.png" alt="image-20220425032856331"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032913690.png" alt="image-20220425032913690"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425032925538.png" alt="image-20220425032925538"></p><h3 id="多文件上传"><a href="#多文件上传" class="headerlink" title="多文件上传"></a>多文件上传</h3><p>多文件上传，只需要将页面修改为多个文件上传项，将方法参数MultipartFile类型修改为MultipartFile[]即可</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425033003816.png" alt="image-20220425033003816"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425033010210.png" alt="image-20220425033010210"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/image-20220425031516981.png&quot; alt=&quot;image-20220425031516981&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>springmvc的数据响应</title>
    <link href="http://example.com/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/"/>
    <id>http://example.com/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/</id>
    <published>2021-09-14T18:53:57.000Z</published>
    <updated>2022-04-24T19:33:52.561Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030120894.png" alt="image-20220425030120894"></p><h1 id="springmvc的数据响应（往前传）"><a href="#springmvc的数据响应（往前传）" class="headerlink" title="springmvc的数据响应（往前传）"></a>springmvc的数据响应（往前传）</h1><h2 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h2><h3 id="转发和重定向的区别"><a href="#转发和重定向的区别" class="headerlink" title="转发和重定向的区别"></a>转发和重定向的区别</h3><p>转发：</p><p>地址栏不发生变化，显示的是上一个页面的地址<br>请求次数：只有1次请求<br>根目录：<a href="http://localhost:8080/%E9%A1%B9%E7%9B%AE%E5%9C%B0%E5%9D%80/%EF%BC%8C%E5%8C%85%E5%90%AB%E4%BA%86%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80">http://localhost:8080/项目地址/，包含了项目的访问地址</a><br>请求域中数据不会丢失</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030346442.png" alt="image-20220425030346442"></p><p>重定向：</p><p>地址栏：显示新的地址<br>请求次数：2次<br>根目录：<a href="http://localhost:8080/">http://localhost:8080/</a> 没有项目的名字<br>请求域中的数据会丢失，因为是2次请求</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030416929.png" alt="image-20220425030416929"></p><h3 id="直接返回字符串形式"><a href="#直接返回字符串形式" class="headerlink" title="直接返回字符串形式"></a>直接返回字符串形式</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030511128.png" alt="image-20220425030511128"></p><h3 id="返回modeAndview形式"><a href="#返回modeAndview形式" class="headerlink" title="返回modeAndview形式"></a>返回modeAndview形式</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030543294.png" alt="image-20220425030543294"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030554039.png" alt="image-20220425030554039"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030612690.png" alt="image-20220425030612690"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030620199.png" alt="image-20220425030620199"></p><h2 id="回写数据"><a href="#回写数据" class="headerlink" title="回写数据"></a>回写数据</h2><h3 id="直接回写字符串"><a href="#直接回写字符串" class="headerlink" title="直接回写字符串"></a>直接回写字符串</h3><p>Web基础阶段，客户端访问服务器端，如果想直接回写字符串作为响应体返回的话，只需要使用<br>response.getWriter().print(“hello world”)即可<br>通过SpringMVC框架注入的response对象，使用response.getWriter().print(“hello world”)回写数<br>据，此时不需要视图跳转，业务方法返回值为void。</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030704866.png" alt="image-20220425030704866"></p><p>将需要回写的字符串直接返回，但此时需要通过eResponseBody注解告知SpringMVC框架，方法<br>返回的字符串不是跳转是直接在http响应体中返回。</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030728991.png" alt="image-20220425030728991"></p><h3 id="返回json字符串"><a href="#返回json字符串" class="headerlink" title="返回json字符串"></a>返回json字符串</h3><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030918490.png" alt="image-20220425030918490"></p><p>配置自动转换json格式的处理适配器</p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425031346641.png" alt="image-20220425031346641"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425031353346.png" alt="image-20220425031353346"></p><p><img src="/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425031403035.png" alt="image-20220425031403035"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/15/springmvc%E7%9A%84%E6%95%B0%E6%8D%AE%E5%93%8D%E5%BA%94/image-20220425030120894.png&quot; alt=&quot;image-20220425030120894&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>spring的Ioc</title>
    <link href="http://example.com/2021/09/10/spring%E7%9A%84Ioc/"/>
    <id>http://example.com/2021/09/10/spring%E7%9A%84Ioc/</id>
    <published>2021-09-10T02:13:45.000Z</published>
    <updated>2022-04-24T18:45:52.400Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022718381.png" alt="image-20220425022718381"></p><h1 id="Spring的IOC（控制反转）"><a href="#Spring的IOC（控制反转）" class="headerlink" title="Spring的IOC（控制反转）"></a>Spring的IOC（控制反转）</h1><h2 id="spring简介"><a href="#spring简介" class="headerlink" title="spring简介"></a>spring简介</h2><h3 id="Spring是什么"><a href="#Spring是什么" class="headerlink" title="Spring是什么"></a>Spring是什么</h3><ol><li>Spring是轻量级开源框架，它是很多模块的集合 ，以loC(反转控制)和AOP(面向切面编程)为内核。</li><li>旨在提高开发人员的开发效率以及系统的可维护性</li><li>这些模块是核心容器、数据访问&#x2F;集成、Web、AOP（面向切面编程）、工具、消息和测试模块。</li><li>比如Core Container中的Core组件是Spring所有组件的核心，Beans组件和Context组件是实现IOC和DI的基础，AOP组件用来实现面向切面编程。</li></ol><h3 id="Spring的优势"><a href="#Spring的优势" class="headerlink" title="Spring的优势"></a>Spring的优势</h3><p>1)方便解耦，简化开发<br>2)AOP编程的支持<br>3)声明式事务的支持<br>4)方便程序的测试<br>5)方便集成各种优秀框架<br>6)降低JavaEE AP1的使用难度<br>7)Java源码是经典学习范例</p><h3 id="spring的开发步骤"><a href="#spring的开发步骤" class="headerlink" title="spring的开发步骤"></a>spring的开发步骤</h3><ul><li>导入 Spring开发的基本包坐标</li><li>编写Dao接口和实现类</li><li>创建Spring 核心配置文件      </li><li>在Spring 配置文件中配置UserDaolmpl</li><li>使用Spring 的API获得 Bean 实例</li></ul><p><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022024093.png" alt="image-20220425022024093"></p><h2 id="Bean"><a href="#Bean" class="headerlink" title="Bean"></a>Bean</h2><h3 id="Bean标签范围配置"><a href="#Bean标签范围配置" class="headerlink" title="Bean标签范围配置"></a>Bean标签范围配置</h3><p>用于配置对象交由Spring来创建。<br>默认情况下它调用的是类中的无参构造函数，如果没有无参构造函数则不能创建成功。<br>基本属性:</p><ul><li>id : Bean实例在Spring容器中的唯─标识</li><li>class: Bean的全限定名称</li><li><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022225407.png" alt="image-20220425022225407"></li></ul><p>当scope的取值为singleton时<br>Bean的实例化个数：1个<br>Bean的实例化时机：当Spring核心文件被加载时，实例化配置的Bean实例<br>Bean的生命周期：<br> 对象创建：当应用加载，创建容器时，对象就被创建了<br> 对象运行：只要容器在，对象一直活着<br> 对象销毁：当应用卸载，销毁容器时，对象就被销毁了<br>2）当scope的取值为prototype时<br>Bean的实例化个数：多个<br>Bean的实例化时机：当调用getBean()方法时实例化Bean<br> 对象创建：当使用对象时，创建新的对象实例<br> 对象运行：只要对象在使用中，就一直活着<br> 对象销毁：当对象长时间不用时，被 Java 的垃圾回收器回收了</p><h3 id="Bean实例化三种方式"><a href="#Bean实例化三种方式" class="headerlink" title="Bean实例化三种方式"></a>Bean实例化三种方式</h3><p><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022353002.png" alt="image-20220425022353002"></p><p><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022402296.png" alt="image-20220425022402296"></p><p><img src="/2021/09/10/spring%E7%9A%84Ioc/image-20220425022411827.png" alt="image-20220425022411827"></p><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><p>IOC（Inversion Of Controll，控制反转）是一种设计思想，就是将原本在程序中手动创建对象的控制权，交给IOC容器来管理，并由IOC容器完成对象的注入。这样可以很大程度上简化应用的开发，把应用从复杂的依赖关系中解放出来。IOC容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件&#x2F;注解即可，完全不用考虑对象是如何被创建出来的。</p><h2 id="DI-依赖注入"><a href="#DI-依赖注入" class="headerlink" title="DI 依赖注入"></a>DI 依赖注入</h2><p>依赖注入(Dependency Injection) :它是Spring框架核心IOC的具体实现。<br>在编写程序时，通过控制反转，把对象的创建交给了Spring，但是代码中不可能出现没有依赖的情况。IOC解耦只是降低他们的依赖关系，但不会消除。例如:业务层仍会调用持久层的方法。<br>那这种业务层和持久层的依赖关系，在使用Spring之后，就让Spring来维护了。<br>简单的说，就是坐等框架把持久层对象传入业务层，而不用我们自己去获取。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userservice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.service.imp1.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span> / &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/10/spring%E7%9A%84Ioc/image-20220425022718381.png&quot; alt=&quot;image-20220425022718381&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Spring的IOC（控制反转）&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
</feed>
